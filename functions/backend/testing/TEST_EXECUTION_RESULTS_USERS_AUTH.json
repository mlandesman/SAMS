{
  "startTime": "2025-07-22T03:37:37.264Z",
  "endTime": "2025-07-22T03:37:44.577Z",
  "phases": {
    "phase1": {
      "name": "Critical Security",
      "tests": [
        {
          "id": "TEST-1753155457275-kw31hv4ww",
          "name": "AUTH-001: Test accessing user profile without any authorization header",
          "passed": true,
          "duration": 1,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:37.712Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "No valid authorization header"
          },
          "expectedBody": {
            "error": "No valid authorization header"
          },
          "message": "User cannot access their profile without logging in",
          "testId": "AUTH-001",
          "category": "Authentication",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "Critical - Prevents unauthorized data access"
        },
        {
          "id": "TEST-1753155457763-qhw2uvz8i",
          "name": "AUTH-002: Test accessing user profile with invalid token format",
          "passed": true,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:37.767Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "message": "System rejects tokens that aren't properly formatted Firebase tokens",
          "testId": "AUTH-002",
          "category": "Authentication",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "Critical - Prevents token forgery"
        },
        {
          "id": "TEST-1753155457818-480ynxg6v",
          "name": "AUTH-003: Test accessing user profile with expired Firebase token",
          "passed": true,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:37.822Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "message": "Old login tokens cannot be reused after expiration",
          "testId": "AUTH-003",
          "category": "Authentication",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "High - Prevents session hijacking with old tokens"
        },
        {
          "id": "TEST-1753155457873-elm0gejpy",
          "name": "AUTH-004: Test with token from different Firebase project",
          "passed": true,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:37.877Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "message": "Tokens from other Firebase projects are rejected",
          "testId": "AUTH-004",
          "category": "Authentication",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "Critical - Prevents cross-project token abuse"
        },
        {
          "id": "TEST-1753155457928-z7l9kqtuv",
          "name": "AUTH-005: Test with malformed Bearer header format",
          "passed": true,
          "duration": 2,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:37.931Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "Invalid authorization format - use 'Bearer YOUR_TOKEN'"
          },
          "expectedBody": {
            "error": "Invalid authorization format - use 'Bearer YOUR_TOKEN'"
          },
          "message": "Authorization header must follow Bearer token format",
          "testId": "AUTH-005",
          "category": "Authentication",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "Medium - Enforces proper authentication standards"
        },
        {
          "id": "TEST-1753155457982-asff51ilx",
          "name": "AUTH-006: Test with token in wrong header field",
          "passed": false,
          "duration": 1179,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:39.161Z",
          "actualStatus": 200,
          "expectedStatus": 401,
          "actualBody": {
            "user": {
              "id": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
              "email": "michael@landesman.com",
              "name": "Michael Landesman",
              "isActive": true,
              "globalRole": "superAdmin",
              "propertyAccess": {
                "MTC": {
                  "isAdmin": true,
                  "unitAssignments": [
                    {
                      "role": "owner",
                      "unitId": "PH4D"
                    }
                  ]
                },
                "test-client": {
                  "role": "user",
                  "unitAssignments": [
                    {
                      "unitId": "test-unit",
                      "role": "unitManager",
                      "addedDate": "2025-07-21T16:14:56.542Z",
                      "addedBy": "michael@landesman.com"
                    }
                  ],
                  "addedDate": "2025-07-21T16:14:56.542Z",
                  "addedBy": "michael@landesman.com"
                }
              },
              "preferredClient": "test-client"
            }
          },
          "expectedBody": {
            "error": "No valid authorization header"
          },
          "message": "Expected 401, got 200",
          "testId": "AUTH-006",
          "category": "Authentication",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "Medium - Prevents header confusion attacks"
        },
        {
          "id": "TEST-1753155459212-yj6j8v6t1",
          "name": "AUTH-007: Test accessing user clients without authorization",
          "passed": true,
          "duration": 2,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:39.214Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "No valid authorization header"
          },
          "expectedBody": {
            "error": "No valid authorization header"
          },
          "message": "Client list requires authentication",
          "testId": "AUTH-007",
          "category": "Authentication",
          "endpoint": "GET GET /api/user/clients",
          "securityImpact": "Critical - Protects client data"
        },
        {
          "id": "TEST-1753155459265-yjg5n72pe",
          "name": "AUTH-008: Test selecting client without authorization",
          "passed": true,
          "duration": 2,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:39.267Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "No valid authorization header"
          },
          "expectedBody": {
            "error": "No valid authorization header"
          },
          "message": "Cannot switch clients without being logged in",
          "testId": "AUTH-008",
          "category": "Authentication",
          "endpoint": "POST POST /api/user/select-client",
          "securityImpact": "Critical - Prevents unauthorized client access"
        },
        {
          "id": "TEST-1753155459318-2x6md72nh",
          "name": "AUTH-009: Test accessing admin users list without authorization",
          "passed": true,
          "duration": 1,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:39.319Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "No valid authorization header"
          },
          "expectedBody": {
            "error": "No valid authorization header"
          },
          "message": "Admin endpoints require authentication",
          "testId": "AUTH-009",
          "category": "Authentication",
          "endpoint": "GET GET /api/admin/users",
          "securityImpact": "Critical - Protects user data"
        },
        {
          "id": "TEST-1753155459370-q91sh7ctr",
          "name": "AUTH-010: Test updating user without authorization",
          "passed": true,
          "duration": 1,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:39.372Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "No valid authorization header"
          },
          "expectedBody": {
            "error": "No valid authorization header"
          },
          "message": "Cannot modify users without authentication",
          "testId": "AUTH-010",
          "category": "Authentication",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Critical - Prevents unauthorized user modifications"
        },
        {
          "id": "TEST-1753155459423-gl0r95axq",
          "name": "AUTH-011: Test accessing unit management endpoint without auth",
          "passed": false,
          "duration": 994,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:40.417Z",
          "actualStatus": 200,
          "expectedStatus": 401,
          "actualBody": {
            "success": true,
            "message": "Unit Management enablement completed",
            "details": {
              "processed": 2,
              "updated": 0,
              "created": 0,
              "alreadyEnabled": 2,
              "errors": []
            }
          },
          "expectedBody": {
            "error": "No valid authorization header"
          },
          "message": "Expected 401, got 200",
          "testId": "AUTH-011",
          "category": "Authentication",
          "endpoint": "GET GET /api/admin/enable-unit-management",
          "securityImpact": "Critical - Protects system configuration"
        },
        {
          "id": "TEST-1753155460468-rc1t0vjme",
          "name": "AUTH-012: Test with valid token but insufficient permissions",
          "passed": false,
          "duration": 6,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:40.475Z",
          "actualStatus": 401,
          "expectedStatus": 403,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Insufficient permissions"
          },
          "message": "Expected 403, got 401",
          "testId": "AUTH-012",
          "category": "Authentication",
          "endpoint": "GET GET /api/admin/users",
          "securityImpact": "Critical - Enforces role-based access"
        },
        {
          "id": "TEST-1753155460527-87eubn1iy",
          "name": "AUTH-013: Test creating user with empty authorization header",
          "passed": true,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:40.532Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "No valid authorization header"
          },
          "expectedBody": {
            "error": "No valid authorization header"
          },
          "message": "Empty authorization header is rejected",
          "testId": "AUTH-013",
          "category": "Authentication",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Medium - Prevents empty token bypass"
        },
        {
          "id": "TEST-1753155460583-s640e5omc",
          "name": "AUTH-014: Test deleting user without authorization",
          "passed": true,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:40.588Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "No valid authorization header"
          },
          "expectedBody": {
            "error": "No valid authorization header"
          },
          "message": "User deletion requires authentication",
          "testId": "AUTH-014",
          "category": "Authentication",
          "endpoint": "DELETE DELETE /api/admin/users/test-user-id",
          "securityImpact": "Critical - Prevents unauthorized deletions"
        },
        {
          "id": "TEST-1753155460639-kbquov6dy",
          "name": "AUTH-015: Test with SQL injection in authorization header",
          "passed": true,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:40.642Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "message": "SQL injection attempts in auth headers are blocked",
          "testId": "AUTH-015",
          "category": "Authentication",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "High - Prevents injection attacks"
        },
        {
          "id": "TEST-1753155460694-z2h2x5sta",
          "name": "AUTH-016: Test with extremely long token (buffer overflow attempt)",
          "passed": true,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:40.697Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "message": "Oversized tokens are rejected to prevent overflow attacks",
          "testId": "AUTH-016",
          "category": "Authentication",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "Medium - Prevents buffer overflow"
        },
        {
          "id": "TEST-1753155460749-1crnrem9w",
          "name": "AUTH-017: Test unit role assignment without authorization",
          "passed": true,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:40.753Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "No valid authorization header"
          },
          "expectedBody": {
            "error": "No valid authorization header"
          },
          "message": "Role assignments require authentication",
          "testId": "AUTH-017",
          "category": "Authentication",
          "endpoint": "POST POST /api/admin/users/:userId/unit-roles",
          "securityImpact": "Critical - Prevents privilege escalation"
        },
        {
          "id": "TEST-1753155460805-r382cm77f",
          "name": "AUTH-018: Test accessing statistics without authorization",
          "passed": true,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:40.808Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "No valid authorization header"
          },
          "expectedBody": {
            "error": "No valid authorization header"
          },
          "message": "System statistics require authentication",
          "testId": "AUTH-018",
          "category": "Authentication",
          "endpoint": "GET GET /api/admin/stats",
          "securityImpact": "High - Protects system information"
        },
        {
          "id": "TEST-1753155460859-cmj7480un",
          "name": "AUTH-019: Test accessing audit logs without authorization",
          "passed": true,
          "duration": 2,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:40.862Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "No valid authorization header"
          },
          "expectedBody": {
            "error": "No valid authorization header"
          },
          "message": "Security audit logs require authentication",
          "testId": "AUTH-019",
          "category": "Authentication",
          "endpoint": "GET GET /api/admin/audit-logs",
          "securityImpact": "Critical - Protects security logs"
        },
        {
          "id": "TEST-1753155460914-v8e2lygnx",
          "name": "AUTH-020: Test with Bearer keyword but no token",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:40.918Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "Invalid authorization format - use 'Bearer YOUR_TOKEN'"
          },
          "expectedBody": {
            "error": "No token provided"
          },
          "message": "Expected 401, got 401",
          "testId": "AUTH-020",
          "category": "Authentication",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "Low - Enforces complete auth format"
        },
        {
          "id": "TEST-1753155460969-t166exa50",
          "name": "FIELD-001: Test creating user with forbidden 'vendor' field",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:40.974Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS",
            "details": [
              {
                "field": "vendor",
                "message": "Invalid field 'vendor'. Use 'vendorId' instead"
              }
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-001",
          "category": "Field Validation",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "High - Prevents field name confusion attacks"
        },
        {
          "id": "TEST-1753155461026-u90al8mdn",
          "name": "FIELD-002: Test creating user with forbidden 'category' field",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.031Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS",
            "details": [
              {
                "field": "category",
                "message": "Invalid field 'category'. Use 'categoryId' instead"
              }
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-002",
          "category": "Field Validation",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "High - Maintains data integrity"
        },
        {
          "id": "TEST-1753155461081-cc5govbh1",
          "name": "FIELD-003: Test updating user with forbidden 'account' field",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.085Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS",
            "details": [
              {
                "field": "account",
                "message": "Invalid field 'account'. Use 'accountId' instead"
              }
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-003",
          "category": "Field Validation",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "High - Prevents legacy field usage"
        },
        {
          "id": "TEST-1753155461136-wwmfh9dn2",
          "name": "FIELD-004: Test updating user with multiple forbidden fields",
          "passed": false,
          "duration": 2,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.138Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS",
            "details": [
              {
                "field": "vendor",
                "message": "Invalid field 'vendor'. Use 'vendorId' instead"
              },
              {
                "field": "category",
                "message": "Invalid field 'category'. Use 'categoryId' instead"
              },
              {
                "field": "unit",
                "message": "Invalid field 'unit'. Use 'unitId' instead"
              }
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-004",
          "category": "Field Validation",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "High - Comprehensive field validation"
        },
        {
          "id": "TEST-1753155461189-tb53ezmzp",
          "name": "FIELD-005: Test with nested forbidden fields in propertyAccess",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.192Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS",
            "details": [
              {
                "field": "propertyAccess.client123.vendor",
                "message": "Invalid field 'vendor'. Use 'vendorId' instead"
              }
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-005",
          "category": "Field Validation",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "High - Deep object validation"
        },
        {
          "id": "TEST-1753155461243-k84cnnx3p",
          "name": "FIELD-006: Test client selection with forbidden 'client' field",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.246Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS",
            "details": [
              {
                "field": "client",
                "message": "Invalid field 'client'. Use 'clientId' instead"
              }
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-006",
          "category": "Field Validation",
          "endpoint": "POST POST /api/user/select-client",
          "securityImpact": "Medium - API consistency"
        },
        {
          "id": "TEST-1753155461297-de1bluxfe",
          "name": "FIELD-007: Test with forbidden 'manager' field (user-specific)",
          "passed": false,
          "duration": 1,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.298Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid user field names detected",
            "code": "FORBIDDEN_USER_FIELDS",
            "details": [
              {
                "field": "manager",
                "message": "Invalid field 'manager'. Use 'managerId' instead"
              }
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-007",
          "category": "Field Validation",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "High - Prevents legacy structure usage"
        },
        {
          "id": "TEST-1753155461349-te9x42cwu",
          "name": "FIELD-008: Test with forbidden fields in array elements",
          "passed": false,
          "duration": 2,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.351Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS",
            "details": [
              {
                "field": "permissions.0.unit",
                "message": "Invalid field 'unit'. Use 'unitId' instead"
              }
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-008",
          "category": "Field Validation",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Medium - Array validation"
        },
        {
          "id": "TEST-1753155461402-ulvw4jq4z",
          "name": "FIELD-009: Test SQL injection attempt in field names",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.406Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid request format"
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-009",
          "category": "Field Validation",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Critical - Prevents injection attacks"
        },
        {
          "id": "TEST-1753155461457-qsfr36561",
          "name": "FIELD-010: Test adding client access with forbidden 'client' field",
          "passed": false,
          "duration": 2,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.459Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS",
            "details": [
              {
                "field": "client",
                "message": "Invalid field 'client'. Use 'clientId' instead"
              }
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-010",
          "category": "Field Validation",
          "endpoint": "POST POST /api/admin/users/:userId/clients",
          "securityImpact": "Medium - API consistency"
        }
      ],
      "startTime": "2025-07-22T03:37:37.275Z",
      "endTime": "2025-07-22T03:37:41.510Z"
    },
    "phase2": {
      "name": "Data Integrity",
      "tests": [
        {
          "id": "TEST-1753155461511-4bey2ifp7",
          "name": "FIELD-011: Test with extremely long field names",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.514Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field name length"
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-011",
          "category": "Field Validation",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Low - Prevents resource exhaustion"
        },
        {
          "id": "TEST-1753155461565-k0ztj9hb7",
          "name": "FIELD-012: Test with Unicode characters in forbidden fields",
          "passed": false,
          "duration": 2,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.568Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field name format"
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-012",
          "category": "Field Validation",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Medium - Unicode bypass prevention"
        },
        {
          "id": "TEST-1753155461619-1ezo202bp",
          "name": "FIELD-013: Test case variations of forbidden fields",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.624Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected"
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-013",
          "category": "Field Validation",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Low - Case sensitivity check"
        },
        {
          "id": "TEST-1753155461675-8g6edao0m",
          "name": "FIELD-014: Test unit role with forbidden 'unit' field",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.679Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS",
            "details": [
              {
                "field": "unit",
                "message": "Invalid field 'unit'. Use 'unitId' instead"
              }
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-014",
          "category": "Field Validation",
          "endpoint": "POST POST /api/admin/users/:userId/unit-roles",
          "securityImpact": "High - Prevents role confusion"
        },
        {
          "id": "TEST-1753155461730-acvvygvuo",
          "name": "FIELD-015: Test deeply nested forbidden fields",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.733Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS",
            "details": [
              {
                "field": "data.level1.level2.level3.vendor",
                "message": "Invalid field 'vendor'. Use 'vendorId' instead"
              }
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-015",
          "category": "Field Validation",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "High - Deep validation"
        },
        {
          "id": "TEST-1753155461783-ptykwg70e",
          "name": "FIELD-016: Test with null values in forbidden fields",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.788Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS"
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-016",
          "category": "Field Validation",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Medium - Null bypass prevention"
        },
        {
          "id": "TEST-1753155461839-e0rlr6niu",
          "name": "FIELD-017: Test with empty string in forbidden fields",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.843Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS"
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-017",
          "category": "Field Validation",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Medium - Empty value bypass prevention"
        },
        {
          "id": "TEST-1753155461894-80aq758e0",
          "name": "FIELD-018: Test with boolean values in forbidden fields",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.899Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS"
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-018",
          "category": "Field Validation",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Low - Type checking"
        },
        {
          "id": "TEST-1753155461950-z5v92xgve",
          "name": "FIELD-019: Test with numeric values in forbidden fields",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.955Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS"
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-019",
          "category": "Field Validation",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Low - Type validation"
        },
        {
          "id": "TEST-1753155462005-gr4ejjvod",
          "name": "FIELD-020: Test field validation with array of forbidden values",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.010Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS"
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-020",
          "category": "Field Validation",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Low - Array type validation"
        },
        {
          "id": "TEST-1753155462061-vs7pm7ye4",
          "name": "FIELD-021: Test with object values in forbidden fields",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.067Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS"
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-021",
          "category": "Field Validation",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Medium - Object validation"
        },
        {
          "id": "TEST-1753155462118-lqytp4bj8",
          "name": "FIELD-022: Test prototype pollution attempt",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.123Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field name"
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-022",
          "category": "Field Validation",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Critical - Prevents prototype pollution"
        },
        {
          "id": "TEST-1753155462174-yw5zvhpco",
          "name": "FIELD-023: Test with constructor override attempt",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.177Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field name"
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-023",
          "category": "Field Validation",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "High - Prevents object manipulation"
        },
        {
          "id": "TEST-1753155462229-tif33w8zh",
          "name": "FIELD-024: Test mixed valid and invalid fields",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.234Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS",
            "details": [
              {
                "field": "vendor",
                "message": "Invalid field 'vendor'. Use 'vendorId' instead"
              }
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-024",
          "category": "Field Validation",
          "endpoint": "POST POST /api/admin/users/:userId/clients",
          "securityImpact": "High - Partial validation prevention"
        },
        {
          "id": "TEST-1753155462284-c5ppx3drd",
          "name": "FIELD-025: Test field validation bypass with JSON strings",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.289Z",
          "actualStatus": 401,
          "expectedStatus": 200,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "success": true
          },
          "message": "Expected 200, got 401",
          "testId": "FIELD-025",
          "category": "Field Validation",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Low - Expected behavior"
        },
        {
          "id": "TEST-1753155462340-xbmstlbmk",
          "name": "LEGACY-001: Test creating user with old role assignment format",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.344Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid user structure",
            "message": "Use propertyAccess for role assignments"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-001",
          "category": "Legacy Structure",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "High - Prevents legacy role confusion"
        },
        {
          "id": "TEST-1753155462396-67r3zf7c5",
          "name": "LEGACY-002: Test updating with legacy clientAccess structure",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.401Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field structure",
            "message": "Use propertyAccess instead of clientAccess"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-002",
          "category": "Legacy Structure",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "High - Enforces new access model"
        },
        {
          "id": "TEST-1753155462452-qez0k5naa",
          "name": "LEGACY-003: Test with old manager assignment format",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.457Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid user field names detected",
            "code": "FORBIDDEN_USER_FIELDS"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-003",
          "category": "Legacy Structure",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Medium - Data consistency"
        },
        {
          "id": "TEST-1753155462509-0kz7zaap5",
          "name": "LEGACY-004: Test with legacy permissions array",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.514Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid permission structure",
            "message": "Use role-based permissions"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-004",
          "category": "Legacy Structure",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "High - Enforces RBAC"
        },
        {
          "id": "TEST-1753155462565-1ur647lpx",
          "name": "LEGACY-005: Test with legacy unit assignment structure",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.568Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-005",
          "category": "Legacy Structure",
          "endpoint": "POST POST /api/admin/users/:userId/unit-roles",
          "securityImpact": "High - Prevents permission bypass"
        },
        {
          "id": "TEST-1753155462619-kkjqlny3h",
          "name": "LEGACY-006: Test with isAdmin boolean (legacy)",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.624Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field",
            "message": "Use globalRole instead of isAdmin"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-006",
          "category": "Legacy Structure",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Critical - Prevents privilege escalation"
        },
        {
          "id": "TEST-1753155462675-rsxkk8zwu",
          "name": "LEGACY-007: Test with legacy tenant field",
          "passed": false,
          "duration": 6,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.682Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field",
            "message": "Multi-tenancy uses propertyAccess"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-007",
          "category": "Legacy Structure",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Medium - Multi-tenant isolation"
        },
        {
          "id": "TEST-1753155462733-md1b3nijn",
          "name": "LEGACY-008: Test with legacy accessLevel number",
          "passed": false,
          "duration": 6,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.739Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field",
            "message": "Use role-based access control"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-008",
          "category": "Legacy Structure",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Medium - Access control clarity"
        },
        {
          "id": "TEST-1753155462790-la59ux6yg",
          "name": "LEGACY-009: Test client selection with legacy structure",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.796Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-009",
          "category": "Legacy Structure",
          "endpoint": "POST POST /api/user/select-client",
          "securityImpact": "Low - API consistency"
        },
        {
          "id": "TEST-1753155462848-eo8o7wtlu",
          "name": "LEGACY-010: Test with legacy department assignment",
          "passed": false,
          "duration": 6,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.854Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field",
            "message": "Department assignments use propertyAccess"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-010",
          "category": "Legacy Structure",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Low - Organizational clarity"
        },
        {
          "id": "TEST-1753155462905-akgp9xbcr",
          "name": "LEGACY-011: Test adding client with legacy all-access flag",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.911Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field",
            "message": "Use specific role assignments"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-011",
          "category": "Legacy Structure",
          "endpoint": "POST POST /api/admin/users/:userId/clients",
          "securityImpact": "High - Granular access control"
        },
        {
          "id": "TEST-1753155462962-102hy9x1m",
          "name": "LEGACY-012: Test with legacy groups array",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.968Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field",
            "message": "Group assignments use propertyAccess"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-012",
          "category": "Legacy Structure",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Medium - Access model consistency"
        },
        {
          "id": "TEST-1753155463019-rkli7pjwo",
          "name": "LEGACY-013: Test with legacy active/inactive status",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.024Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field",
            "message": "Use isActive boolean field"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-013",
          "category": "Legacy Structure",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Low - Data consistency"
        },
        {
          "id": "TEST-1753155463076-a373zzqyk",
          "name": "LEGACY-014: Test with legacy lastSeen timestamp",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.081Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field",
            "message": "Use lastLogin field"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-014",
          "category": "Legacy Structure",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Low - Field naming consistency"
        },
        {
          "id": "TEST-1753155463133-d538awg96",
          "name": "LEGACY-015: Test with legacy super-user flag",
          "passed": false,
          "duration": 2,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.135Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field",
            "message": "Use globalRole for super admin"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-015",
          "category": "Legacy Structure",
          "endpoint": "POST POST /api/admin/users/:userId/unit-roles",
          "securityImpact": "Critical - Privilege control"
        }
      ],
      "startTime": "2025-07-22T03:37:41.511Z",
      "endTime": "2025-07-22T03:37:43.186Z"
    },
    "phase3": {
      "name": "Comprehensive Coverage",
      "tests": [
        {
          "id": "TEST-1753155463187-vnlylhtor",
          "name": "ERROR-001: Verify error doesn't leak system internals",
          "passed": false,
          "duration": 2,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.189Z",
          "actualStatus": 401,
          "expectedStatus": 500,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Internal server error",
            "code": "INTERNAL_ERROR"
          },
          "message": "Expected 500, got 401",
          "testId": "ERROR-001",
          "category": "Error Response",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "High - Prevents information leakage"
        },
        {
          "id": "TEST-1753155463240-k4yexfrxy",
          "name": "ERROR-002: Test duplicate email error message",
          "passed": false,
          "duration": 2,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.243Z",
          "actualStatus": 401,
          "expectedStatus": 409,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "User already exists",
            "code": "USER_EXISTS"
          },
          "message": "Expected 409, got 401",
          "testId": "ERROR-002",
          "category": "Error Response",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Low - User enumeration risk accepted"
        },
        {
          "id": "TEST-1753155463294-wt8wd9h2h",
          "name": "ERROR-003: Test error for non-existent user update",
          "passed": false,
          "duration": 2,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.297Z",
          "actualStatus": 401,
          "expectedStatus": 404,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "User not found",
            "code": "USER_NOT_FOUND"
          },
          "message": "Expected 404, got 401",
          "testId": "ERROR-003",
          "category": "Error Response",
          "endpoint": "PUT PUT /api/admin/users/nonexistent-user",
          "securityImpact": "Low - Proper status codes"
        },
        {
          "id": "TEST-1753155463348-nti7eh85a",
          "name": "ERROR-004: Test error selecting unauthorized client",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.353Z",
          "actualStatus": 401,
          "expectedStatus": 403,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Access denied to this client",
            "code": "CLIENT_ACCESS_DENIED"
          },
          "message": "Expected 403, got 401",
          "testId": "ERROR-004",
          "category": "Error Response",
          "endpoint": "POST POST /api/user/select-client",
          "securityImpact": "High - Access control enforcement"
        },
        {
          "id": "TEST-1753155463404-iep43qne9",
          "name": "ERROR-005: Test error deleting user as non-SuperAdmin",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.408Z",
          "actualStatus": 401,
          "expectedStatus": 403,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Insufficient permissions",
            "code": "PERMISSION_DENIED"
          },
          "message": "Expected 403, got 401",
          "testId": "ERROR-005",
          "category": "Error Response",
          "endpoint": "DELETE DELETE /api/admin/users/test-user",
          "securityImpact": "Critical - Role hierarchy enforcement"
        },
        {
          "id": "TEST-1753155463459-xinfxmu2a",
          "name": "ERROR-006: Test malformed JSON error response",
          "passed": true,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.465Z",
          "actualStatus": 400,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid JSON format",
            "code": "INVALID_JSON"
          },
          "expectedBody": {
            "error": "Invalid JSON format",
            "code": "INVALID_JSON"
          },
          "message": "Malformed requests get clear error",
          "testId": "ERROR-006",
          "category": "Error Response",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Low - Input validation"
        },
        {
          "id": "TEST-1753155463517-dc1zjsg15",
          "name": "ERROR-007: Test rate limit error message",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.520Z",
          "actualStatus": 401,
          "expectedStatus": 429,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Too many requests",
            "code": "RATE_LIMITED",
            "retryAfter": 60
          },
          "message": "Expected 429, got 401",
          "testId": "ERROR-007",
          "category": "Error Response",
          "endpoint": "GET GET /api/admin/users",
          "securityImpact": "Medium - DoS prevention"
        },
        {
          "id": "TEST-1753155463571-0wc07ekfa",
          "name": "ERROR-008: Test concurrent update conflict error",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.574Z",
          "actualStatus": 401,
          "expectedStatus": 409,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Update conflict",
            "code": "UPDATE_CONFLICT"
          },
          "message": "Expected 409, got 401",
          "testId": "ERROR-008",
          "category": "Error Response",
          "endpoint": "PUT PUT /api/admin/users/test-user",
          "securityImpact": "Low - Data integrity"
        },
        {
          "id": "TEST-1753155463625-rl253sv05",
          "name": "ERROR-009: Test missing required field error",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.629Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Missing required field: email",
            "code": "MISSING_FIELD",
            "field": "email"
          },
          "message": "Expected 400, got 401",
          "testId": "ERROR-009",
          "category": "Error Response",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Low - Developer friendly"
        },
        {
          "id": "TEST-1753155463680-ql99r009g",
          "name": "ERROR-010: Test timeout error message",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.685Z",
          "actualStatus": 401,
          "expectedStatus": 504,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Request timeout",
            "code": "TIMEOUT"
          },
          "message": "Expected 504, got 401",
          "testId": "ERROR-010",
          "category": "Error Response",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "Medium - No infrastructure leakage"
        },
        {
          "id": "TEST-1753155463736-up16l2ys6",
          "name": "ERROR-011: Test invalid role error message",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.739Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid role for client access",
            "code": "INVALID_ROLE",
            "validRoles": [
              "viewer",
              "editor",
              "admin"
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "ERROR-011",
          "category": "Error Response",
          "endpoint": "POST POST /api/admin/users/:userId/clients",
          "securityImpact": "Low - Helpful validation"
        },
        {
          "id": "TEST-1753155463790-e71hemjtt",
          "name": "ERROR-012: Test field type mismatch error",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.796Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field type",
            "code": "TYPE_ERROR",
            "field": "isActive",
            "expected": "boolean",
            "received": "string"
          },
          "message": "Expected 400, got 401",
          "testId": "ERROR-012",
          "category": "Error Response",
          "endpoint": "PUT PUT /api/admin/users/test-user",
          "securityImpact": "Low - Input validation"
        },
        {
          "id": "TEST-1753155463847-ger7hd2uy",
          "name": "EDGE-001: Test with extremely large payload (10MB)",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.852Z",
          "actualStatus": 400,
          "expectedStatus": 413,
          "actualBody": {
            "error": "Invalid JSON format",
            "code": "INVALID_JSON"
          },
          "expectedBody": {
            "error": "Payload too large",
            "code": "PAYLOAD_TOO_LARGE",
            "maxSize": "1MB"
          },
          "message": "Expected 413, got 400",
          "testId": "EDGE-001",
          "category": "Edge Cases",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "High - DoS prevention"
        },
        {
          "id": "TEST-1753155463903-lk4me96pg",
          "name": "EDGE-002: Test Unicode in URL parameters",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.906Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid user ID format",
            "code": "INVALID_PARAMETER"
          },
          "message": "Expected 400, got 401",
          "testId": "EDGE-002",
          "category": "Edge Cases",
          "endpoint": "PUT PUT /api/admin/users/test${UNICODE}user",
          "securityImpact": "Medium - Parameter validation"
        },
        {
          "id": "TEST-1753155463957-b3z9zm79w",
          "name": "EDGE-003: Test with null body",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.962Z",
          "actualStatus": 400,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid JSON format",
            "code": "INVALID_JSON"
          },
          "expectedBody": {
            "error": "Request body required",
            "code": "EMPTY_BODY"
          },
          "message": "Expected 400, got 400",
          "testId": "EDGE-003",
          "category": "Edge Cases",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Low - Input validation"
        },
        {
          "id": "TEST-1753155464013-p66cgn3qt",
          "name": "EDGE-004: Test with undefined values",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:44.016Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field values",
            "code": "INVALID_VALUES"
          },
          "message": "Expected 400, got 401",
          "testId": "EDGE-004",
          "category": "Edge Cases",
          "endpoint": "PUT PUT /api/admin/users/test-user",
          "securityImpact": "Low - Data integrity"
        },
        {
          "id": "TEST-1753155464068-6zmqkrdk7",
          "name": "EDGE-005: Test with empty object body",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:44.073Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Missing required field: clientId",
            "code": "MISSING_FIELD"
          },
          "message": "Expected 400, got 401",
          "testId": "EDGE-005",
          "category": "Edge Cases",
          "endpoint": "POST POST /api/user/select-client",
          "securityImpact": "Low - Validation"
        },
        {
          "id": "TEST-1753155464125-ylk6rh1ys",
          "name": "EDGE-006: Test with 1000-character user ID",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:44.130Z",
          "actualStatus": 401,
          "expectedStatus": 414,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "URI too long",
            "code": "URI_TOO_LONG"
          },
          "message": "Expected 414, got 401",
          "testId": "EDGE-006",
          "category": "Edge Cases",
          "endpoint": "DELETE DELETE /api/admin/users/${LONG_ID}",
          "securityImpact": "Medium - Resource exhaustion"
        },
        {
          "id": "TEST-1753155464181-k1s03m2iv",
          "name": "EDGE-007: Test header injection attempt",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": "Invalid character in header content [\"Authorization\"]",
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:44.185Z",
          "testId": "EDGE-007",
          "category": "Edge Cases",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "High - Injection prevention"
        },
        {
          "id": "TEST-1753155464236-0ofleto02",
          "name": "EDGE-008: Test path traversal attempt",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:44.240Z",
          "actualStatus": 404,
          "expectedStatus": 400,
          "actualBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot PUT /etc/passwd</pre>\n</body>\n</html>\n",
          "expectedBody": {
            "error": "Invalid user ID format",
            "code": "INVALID_PARAMETER"
          },
          "message": "Expected 400, got 404",
          "testId": "EDGE-008",
          "category": "Edge Cases",
          "endpoint": "PUT PUT /api/admin/users/../../../etc/passwd",
          "securityImpact": "Critical - File system protection"
        },
        {
          "id": "TEST-1753155464292-q4yhv5xrj",
          "name": "EDGE-009: Test timing attack on user enumeration",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:44.298Z",
          "actualStatus": 401,
          "expectedStatus": "409 or 201",
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "message": "Expected 409 or 201, got 401",
          "testId": "EDGE-009",
          "category": "Edge Cases",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Medium - Timing attack prevention"
        },
        {
          "id": "TEST-1753155464348-4x7i5jpsq",
          "name": "EDGE-010: Test with circular reference in JSON",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:44.353Z",
          "actualStatus": 400,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid JSON format",
            "code": "INVALID_JSON"
          },
          "expectedBody": {
            "error": "Invalid JSON structure",
            "code": "CIRCULAR_REFERENCE"
          },
          "message": "Expected 400, got 400",
          "testId": "EDGE-010",
          "category": "Edge Cases",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Medium - DoS prevention"
        },
        {
          "id": "TEST-1753155464404-wqr83zb9g",
          "name": "EDGE-011: Test with multiple authorization headers",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:44.409Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Multiple authorization headers",
            "code": "DUPLICATE_HEADER"
          },
          "message": "Expected 400, got 401",
          "testId": "EDGE-011",
          "category": "Edge Cases",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "Medium - Auth confusion prevention"
        },
        {
          "id": "TEST-1753155464461-nxmoqukrl",
          "name": "EDGE-012: Test with mixed content types",
          "passed": false,
          "duration": 9,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:44.471Z",
          "actualStatus": 401,
          "expectedStatus": 415,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Unsupported media type",
            "code": "INVALID_CONTENT_TYPE",
            "expected": "application/json"
          },
          "message": "Expected 415, got 401",
          "testId": "EDGE-012",
          "category": "Edge Cases",
          "endpoint": "PUT PUT /api/admin/users/test-user",
          "securityImpact": "Low - Content validation"
        },
        {
          "id": "TEST-1753155464522-azf90fnv4",
          "name": "EDGE-013: Test CORS preflight security",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:44.526Z",
          "actualStatus": 500,
          "expectedStatus": 403,
          "actualBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Error</title>\n</head>\n<body>\n<pre>Error: Not allowed by CORS<br> &nbsp; &nbsp;at origin (file:///Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My%20Drive/Sandyland/SAMS/backend/index.js:41:16)<br> &nbsp; &nbsp;at /Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/cors/lib/index.js:219:13<br> &nbsp; &nbsp;at optionsCallback (/Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/cors/lib/index.js:199:9)<br> &nbsp; &nbsp;at corsMiddleware (/Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/cors/lib/index.js:204:7)<br> &nbsp; &nbsp;at Layer.handle [as handle_request] (/Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/express/lib/router/layer.js:95:5)<br> &nbsp; &nbsp;at trim_prefix (/Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/express/lib/router/index.js:328:13)<br> &nbsp; &nbsp;at /Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/express/lib/router/index.js:286:9<br> &nbsp; &nbsp;at Function.process_params (/Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/express/lib/router/index.js:346:12)<br> &nbsp; &nbsp;at next (/Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/express/lib/router/index.js:280:10)<br> &nbsp; &nbsp;at expressInit (/Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/express/lib/middleware/init.js:40:5)</pre>\n</body>\n</html>\n",
          "message": "Expected 403, got 500",
          "testId": "EDGE-013",
          "category": "Edge Cases",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "High - Cross-origin protection"
        }
      ],
      "startTime": "2025-07-22T03:37:43.187Z",
      "endTime": "2025-07-22T03:37:44.577Z"
    }
  },
  "totalTests": 85,
  "passed": 17,
  "failed": 68,
  "categories": {
    "Authentication": {
      "total": 20,
      "passed": 16,
      "failed": 4,
      "tests": [
        {
          "id": "TEST-1753155457275-kw31hv4ww",
          "name": "AUTH-001: Test accessing user profile without any authorization header",
          "passed": true,
          "duration": 1,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:37.712Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "No valid authorization header"
          },
          "expectedBody": {
            "error": "No valid authorization header"
          },
          "message": "User cannot access their profile without logging in",
          "testId": "AUTH-001",
          "category": "Authentication",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "Critical - Prevents unauthorized data access"
        },
        {
          "id": "TEST-1753155457763-qhw2uvz8i",
          "name": "AUTH-002: Test accessing user profile with invalid token format",
          "passed": true,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:37.767Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "message": "System rejects tokens that aren't properly formatted Firebase tokens",
          "testId": "AUTH-002",
          "category": "Authentication",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "Critical - Prevents token forgery"
        },
        {
          "id": "TEST-1753155457818-480ynxg6v",
          "name": "AUTH-003: Test accessing user profile with expired Firebase token",
          "passed": true,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:37.822Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "message": "Old login tokens cannot be reused after expiration",
          "testId": "AUTH-003",
          "category": "Authentication",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "High - Prevents session hijacking with old tokens"
        },
        {
          "id": "TEST-1753155457873-elm0gejpy",
          "name": "AUTH-004: Test with token from different Firebase project",
          "passed": true,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:37.877Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "message": "Tokens from other Firebase projects are rejected",
          "testId": "AUTH-004",
          "category": "Authentication",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "Critical - Prevents cross-project token abuse"
        },
        {
          "id": "TEST-1753155457928-z7l9kqtuv",
          "name": "AUTH-005: Test with malformed Bearer header format",
          "passed": true,
          "duration": 2,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:37.931Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "Invalid authorization format - use 'Bearer YOUR_TOKEN'"
          },
          "expectedBody": {
            "error": "Invalid authorization format - use 'Bearer YOUR_TOKEN'"
          },
          "message": "Authorization header must follow Bearer token format",
          "testId": "AUTH-005",
          "category": "Authentication",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "Medium - Enforces proper authentication standards"
        },
        {
          "id": "TEST-1753155457982-asff51ilx",
          "name": "AUTH-006: Test with token in wrong header field",
          "passed": false,
          "duration": 1179,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:39.161Z",
          "actualStatus": 200,
          "expectedStatus": 401,
          "actualBody": {
            "user": {
              "id": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
              "email": "michael@landesman.com",
              "name": "Michael Landesman",
              "isActive": true,
              "globalRole": "superAdmin",
              "propertyAccess": {
                "MTC": {
                  "isAdmin": true,
                  "unitAssignments": [
                    {
                      "role": "owner",
                      "unitId": "PH4D"
                    }
                  ]
                },
                "test-client": {
                  "role": "user",
                  "unitAssignments": [
                    {
                      "unitId": "test-unit",
                      "role": "unitManager",
                      "addedDate": "2025-07-21T16:14:56.542Z",
                      "addedBy": "michael@landesman.com"
                    }
                  ],
                  "addedDate": "2025-07-21T16:14:56.542Z",
                  "addedBy": "michael@landesman.com"
                }
              },
              "preferredClient": "test-client"
            }
          },
          "expectedBody": {
            "error": "No valid authorization header"
          },
          "message": "Expected 401, got 200",
          "testId": "AUTH-006",
          "category": "Authentication",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "Medium - Prevents header confusion attacks"
        },
        {
          "id": "TEST-1753155459212-yj6j8v6t1",
          "name": "AUTH-007: Test accessing user clients without authorization",
          "passed": true,
          "duration": 2,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:39.214Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "No valid authorization header"
          },
          "expectedBody": {
            "error": "No valid authorization header"
          },
          "message": "Client list requires authentication",
          "testId": "AUTH-007",
          "category": "Authentication",
          "endpoint": "GET GET /api/user/clients",
          "securityImpact": "Critical - Protects client data"
        },
        {
          "id": "TEST-1753155459265-yjg5n72pe",
          "name": "AUTH-008: Test selecting client without authorization",
          "passed": true,
          "duration": 2,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:39.267Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "No valid authorization header"
          },
          "expectedBody": {
            "error": "No valid authorization header"
          },
          "message": "Cannot switch clients without being logged in",
          "testId": "AUTH-008",
          "category": "Authentication",
          "endpoint": "POST POST /api/user/select-client",
          "securityImpact": "Critical - Prevents unauthorized client access"
        },
        {
          "id": "TEST-1753155459318-2x6md72nh",
          "name": "AUTH-009: Test accessing admin users list without authorization",
          "passed": true,
          "duration": 1,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:39.319Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "No valid authorization header"
          },
          "expectedBody": {
            "error": "No valid authorization header"
          },
          "message": "Admin endpoints require authentication",
          "testId": "AUTH-009",
          "category": "Authentication",
          "endpoint": "GET GET /api/admin/users",
          "securityImpact": "Critical - Protects user data"
        },
        {
          "id": "TEST-1753155459370-q91sh7ctr",
          "name": "AUTH-010: Test updating user without authorization",
          "passed": true,
          "duration": 1,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:39.372Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "No valid authorization header"
          },
          "expectedBody": {
            "error": "No valid authorization header"
          },
          "message": "Cannot modify users without authentication",
          "testId": "AUTH-010",
          "category": "Authentication",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Critical - Prevents unauthorized user modifications"
        },
        {
          "id": "TEST-1753155459423-gl0r95axq",
          "name": "AUTH-011: Test accessing unit management endpoint without auth",
          "passed": false,
          "duration": 994,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:40.417Z",
          "actualStatus": 200,
          "expectedStatus": 401,
          "actualBody": {
            "success": true,
            "message": "Unit Management enablement completed",
            "details": {
              "processed": 2,
              "updated": 0,
              "created": 0,
              "alreadyEnabled": 2,
              "errors": []
            }
          },
          "expectedBody": {
            "error": "No valid authorization header"
          },
          "message": "Expected 401, got 200",
          "testId": "AUTH-011",
          "category": "Authentication",
          "endpoint": "GET GET /api/admin/enable-unit-management",
          "securityImpact": "Critical - Protects system configuration"
        },
        {
          "id": "TEST-1753155460468-rc1t0vjme",
          "name": "AUTH-012: Test with valid token but insufficient permissions",
          "passed": false,
          "duration": 6,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:40.475Z",
          "actualStatus": 401,
          "expectedStatus": 403,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Insufficient permissions"
          },
          "message": "Expected 403, got 401",
          "testId": "AUTH-012",
          "category": "Authentication",
          "endpoint": "GET GET /api/admin/users",
          "securityImpact": "Critical - Enforces role-based access"
        },
        {
          "id": "TEST-1753155460527-87eubn1iy",
          "name": "AUTH-013: Test creating user with empty authorization header",
          "passed": true,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:40.532Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "No valid authorization header"
          },
          "expectedBody": {
            "error": "No valid authorization header"
          },
          "message": "Empty authorization header is rejected",
          "testId": "AUTH-013",
          "category": "Authentication",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Medium - Prevents empty token bypass"
        },
        {
          "id": "TEST-1753155460583-s640e5omc",
          "name": "AUTH-014: Test deleting user without authorization",
          "passed": true,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:40.588Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "No valid authorization header"
          },
          "expectedBody": {
            "error": "No valid authorization header"
          },
          "message": "User deletion requires authentication",
          "testId": "AUTH-014",
          "category": "Authentication",
          "endpoint": "DELETE DELETE /api/admin/users/test-user-id",
          "securityImpact": "Critical - Prevents unauthorized deletions"
        },
        {
          "id": "TEST-1753155460639-kbquov6dy",
          "name": "AUTH-015: Test with SQL injection in authorization header",
          "passed": true,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:40.642Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "message": "SQL injection attempts in auth headers are blocked",
          "testId": "AUTH-015",
          "category": "Authentication",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "High - Prevents injection attacks"
        },
        {
          "id": "TEST-1753155460694-z2h2x5sta",
          "name": "AUTH-016: Test with extremely long token (buffer overflow attempt)",
          "passed": true,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:40.697Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "message": "Oversized tokens are rejected to prevent overflow attacks",
          "testId": "AUTH-016",
          "category": "Authentication",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "Medium - Prevents buffer overflow"
        },
        {
          "id": "TEST-1753155460749-1crnrem9w",
          "name": "AUTH-017: Test unit role assignment without authorization",
          "passed": true,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:40.753Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "No valid authorization header"
          },
          "expectedBody": {
            "error": "No valid authorization header"
          },
          "message": "Role assignments require authentication",
          "testId": "AUTH-017",
          "category": "Authentication",
          "endpoint": "POST POST /api/admin/users/:userId/unit-roles",
          "securityImpact": "Critical - Prevents privilege escalation"
        },
        {
          "id": "TEST-1753155460805-r382cm77f",
          "name": "AUTH-018: Test accessing statistics without authorization",
          "passed": true,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:40.808Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "No valid authorization header"
          },
          "expectedBody": {
            "error": "No valid authorization header"
          },
          "message": "System statistics require authentication",
          "testId": "AUTH-018",
          "category": "Authentication",
          "endpoint": "GET GET /api/admin/stats",
          "securityImpact": "High - Protects system information"
        },
        {
          "id": "TEST-1753155460859-cmj7480un",
          "name": "AUTH-019: Test accessing audit logs without authorization",
          "passed": true,
          "duration": 2,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:40.862Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "No valid authorization header"
          },
          "expectedBody": {
            "error": "No valid authorization header"
          },
          "message": "Security audit logs require authentication",
          "testId": "AUTH-019",
          "category": "Authentication",
          "endpoint": "GET GET /api/admin/audit-logs",
          "securityImpact": "Critical - Protects security logs"
        },
        {
          "id": "TEST-1753155460914-v8e2lygnx",
          "name": "AUTH-020: Test with Bearer keyword but no token",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:40.918Z",
          "actualStatus": 401,
          "expectedStatus": 401,
          "actualBody": {
            "error": "Invalid authorization format - use 'Bearer YOUR_TOKEN'"
          },
          "expectedBody": {
            "error": "No token provided"
          },
          "message": "Expected 401, got 401",
          "testId": "AUTH-020",
          "category": "Authentication",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "Low - Enforces complete auth format"
        }
      ]
    },
    "Field Validation": {
      "total": 25,
      "passed": 0,
      "failed": 25,
      "tests": [
        {
          "id": "TEST-1753155460969-t166exa50",
          "name": "FIELD-001: Test creating user with forbidden 'vendor' field",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:40.974Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS",
            "details": [
              {
                "field": "vendor",
                "message": "Invalid field 'vendor'. Use 'vendorId' instead"
              }
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-001",
          "category": "Field Validation",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "High - Prevents field name confusion attacks"
        },
        {
          "id": "TEST-1753155461026-u90al8mdn",
          "name": "FIELD-002: Test creating user with forbidden 'category' field",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.031Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS",
            "details": [
              {
                "field": "category",
                "message": "Invalid field 'category'. Use 'categoryId' instead"
              }
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-002",
          "category": "Field Validation",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "High - Maintains data integrity"
        },
        {
          "id": "TEST-1753155461081-cc5govbh1",
          "name": "FIELD-003: Test updating user with forbidden 'account' field",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.085Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS",
            "details": [
              {
                "field": "account",
                "message": "Invalid field 'account'. Use 'accountId' instead"
              }
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-003",
          "category": "Field Validation",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "High - Prevents legacy field usage"
        },
        {
          "id": "TEST-1753155461136-wwmfh9dn2",
          "name": "FIELD-004: Test updating user with multiple forbidden fields",
          "passed": false,
          "duration": 2,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.138Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS",
            "details": [
              {
                "field": "vendor",
                "message": "Invalid field 'vendor'. Use 'vendorId' instead"
              },
              {
                "field": "category",
                "message": "Invalid field 'category'. Use 'categoryId' instead"
              },
              {
                "field": "unit",
                "message": "Invalid field 'unit'. Use 'unitId' instead"
              }
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-004",
          "category": "Field Validation",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "High - Comprehensive field validation"
        },
        {
          "id": "TEST-1753155461189-tb53ezmzp",
          "name": "FIELD-005: Test with nested forbidden fields in propertyAccess",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.192Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS",
            "details": [
              {
                "field": "propertyAccess.client123.vendor",
                "message": "Invalid field 'vendor'. Use 'vendorId' instead"
              }
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-005",
          "category": "Field Validation",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "High - Deep object validation"
        },
        {
          "id": "TEST-1753155461243-k84cnnx3p",
          "name": "FIELD-006: Test client selection with forbidden 'client' field",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.246Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS",
            "details": [
              {
                "field": "client",
                "message": "Invalid field 'client'. Use 'clientId' instead"
              }
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-006",
          "category": "Field Validation",
          "endpoint": "POST POST /api/user/select-client",
          "securityImpact": "Medium - API consistency"
        },
        {
          "id": "TEST-1753155461297-de1bluxfe",
          "name": "FIELD-007: Test with forbidden 'manager' field (user-specific)",
          "passed": false,
          "duration": 1,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.298Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid user field names detected",
            "code": "FORBIDDEN_USER_FIELDS",
            "details": [
              {
                "field": "manager",
                "message": "Invalid field 'manager'. Use 'managerId' instead"
              }
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-007",
          "category": "Field Validation",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "High - Prevents legacy structure usage"
        },
        {
          "id": "TEST-1753155461349-te9x42cwu",
          "name": "FIELD-008: Test with forbidden fields in array elements",
          "passed": false,
          "duration": 2,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.351Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS",
            "details": [
              {
                "field": "permissions.0.unit",
                "message": "Invalid field 'unit'. Use 'unitId' instead"
              }
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-008",
          "category": "Field Validation",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Medium - Array validation"
        },
        {
          "id": "TEST-1753155461402-ulvw4jq4z",
          "name": "FIELD-009: Test SQL injection attempt in field names",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.406Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid request format"
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-009",
          "category": "Field Validation",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Critical - Prevents injection attacks"
        },
        {
          "id": "TEST-1753155461457-qsfr36561",
          "name": "FIELD-010: Test adding client access with forbidden 'client' field",
          "passed": false,
          "duration": 2,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.459Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS",
            "details": [
              {
                "field": "client",
                "message": "Invalid field 'client'. Use 'clientId' instead"
              }
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-010",
          "category": "Field Validation",
          "endpoint": "POST POST /api/admin/users/:userId/clients",
          "securityImpact": "Medium - API consistency"
        },
        {
          "id": "TEST-1753155461511-4bey2ifp7",
          "name": "FIELD-011: Test with extremely long field names",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.514Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field name length"
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-011",
          "category": "Field Validation",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Low - Prevents resource exhaustion"
        },
        {
          "id": "TEST-1753155461565-k0ztj9hb7",
          "name": "FIELD-012: Test with Unicode characters in forbidden fields",
          "passed": false,
          "duration": 2,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.568Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field name format"
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-012",
          "category": "Field Validation",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Medium - Unicode bypass prevention"
        },
        {
          "id": "TEST-1753155461619-1ezo202bp",
          "name": "FIELD-013: Test case variations of forbidden fields",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.624Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected"
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-013",
          "category": "Field Validation",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Low - Case sensitivity check"
        },
        {
          "id": "TEST-1753155461675-8g6edao0m",
          "name": "FIELD-014: Test unit role with forbidden 'unit' field",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.679Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS",
            "details": [
              {
                "field": "unit",
                "message": "Invalid field 'unit'. Use 'unitId' instead"
              }
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-014",
          "category": "Field Validation",
          "endpoint": "POST POST /api/admin/users/:userId/unit-roles",
          "securityImpact": "High - Prevents role confusion"
        },
        {
          "id": "TEST-1753155461730-acvvygvuo",
          "name": "FIELD-015: Test deeply nested forbidden fields",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.733Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS",
            "details": [
              {
                "field": "data.level1.level2.level3.vendor",
                "message": "Invalid field 'vendor'. Use 'vendorId' instead"
              }
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-015",
          "category": "Field Validation",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "High - Deep validation"
        },
        {
          "id": "TEST-1753155461783-ptykwg70e",
          "name": "FIELD-016: Test with null values in forbidden fields",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.788Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS"
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-016",
          "category": "Field Validation",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Medium - Null bypass prevention"
        },
        {
          "id": "TEST-1753155461839-e0rlr6niu",
          "name": "FIELD-017: Test with empty string in forbidden fields",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.843Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS"
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-017",
          "category": "Field Validation",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Medium - Empty value bypass prevention"
        },
        {
          "id": "TEST-1753155461894-80aq758e0",
          "name": "FIELD-018: Test with boolean values in forbidden fields",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.899Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS"
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-018",
          "category": "Field Validation",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Low - Type checking"
        },
        {
          "id": "TEST-1753155461950-z5v92xgve",
          "name": "FIELD-019: Test with numeric values in forbidden fields",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:41.955Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS"
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-019",
          "category": "Field Validation",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Low - Type validation"
        },
        {
          "id": "TEST-1753155462005-gr4ejjvod",
          "name": "FIELD-020: Test field validation with array of forbidden values",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.010Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS"
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-020",
          "category": "Field Validation",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Low - Array type validation"
        },
        {
          "id": "TEST-1753155462061-vs7pm7ye4",
          "name": "FIELD-021: Test with object values in forbidden fields",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.067Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS"
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-021",
          "category": "Field Validation",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Medium - Object validation"
        },
        {
          "id": "TEST-1753155462118-lqytp4bj8",
          "name": "FIELD-022: Test prototype pollution attempt",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.123Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field name"
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-022",
          "category": "Field Validation",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Critical - Prevents prototype pollution"
        },
        {
          "id": "TEST-1753155462174-yw5zvhpco",
          "name": "FIELD-023: Test with constructor override attempt",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.177Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field name"
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-023",
          "category": "Field Validation",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "High - Prevents object manipulation"
        },
        {
          "id": "TEST-1753155462229-tif33w8zh",
          "name": "FIELD-024: Test mixed valid and invalid fields",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.234Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected",
            "code": "FORBIDDEN_FIELDS",
            "details": [
              {
                "field": "vendor",
                "message": "Invalid field 'vendor'. Use 'vendorId' instead"
              }
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "FIELD-024",
          "category": "Field Validation",
          "endpoint": "POST POST /api/admin/users/:userId/clients",
          "securityImpact": "High - Partial validation prevention"
        },
        {
          "id": "TEST-1753155462284-c5ppx3drd",
          "name": "FIELD-025: Test field validation bypass with JSON strings",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.289Z",
          "actualStatus": 401,
          "expectedStatus": 200,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "success": true
          },
          "message": "Expected 200, got 401",
          "testId": "FIELD-025",
          "category": "Field Validation",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Low - Expected behavior"
        }
      ]
    },
    "Legacy Structure": {
      "total": 15,
      "passed": 0,
      "failed": 15,
      "tests": [
        {
          "id": "TEST-1753155462340-xbmstlbmk",
          "name": "LEGACY-001: Test creating user with old role assignment format",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.344Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid user structure",
            "message": "Use propertyAccess for role assignments"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-001",
          "category": "Legacy Structure",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "High - Prevents legacy role confusion"
        },
        {
          "id": "TEST-1753155462396-67r3zf7c5",
          "name": "LEGACY-002: Test updating with legacy clientAccess structure",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.401Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field structure",
            "message": "Use propertyAccess instead of clientAccess"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-002",
          "category": "Legacy Structure",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "High - Enforces new access model"
        },
        {
          "id": "TEST-1753155462452-qez0k5naa",
          "name": "LEGACY-003: Test with old manager assignment format",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.457Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid user field names detected",
            "code": "FORBIDDEN_USER_FIELDS"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-003",
          "category": "Legacy Structure",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Medium - Data consistency"
        },
        {
          "id": "TEST-1753155462509-0kz7zaap5",
          "name": "LEGACY-004: Test with legacy permissions array",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.514Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid permission structure",
            "message": "Use role-based permissions"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-004",
          "category": "Legacy Structure",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "High - Enforces RBAC"
        },
        {
          "id": "TEST-1753155462565-1ur647lpx",
          "name": "LEGACY-005: Test with legacy unit assignment structure",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.568Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-005",
          "category": "Legacy Structure",
          "endpoint": "POST POST /api/admin/users/:userId/unit-roles",
          "securityImpact": "High - Prevents permission bypass"
        },
        {
          "id": "TEST-1753155462619-kkjqlny3h",
          "name": "LEGACY-006: Test with isAdmin boolean (legacy)",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.624Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field",
            "message": "Use globalRole instead of isAdmin"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-006",
          "category": "Legacy Structure",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Critical - Prevents privilege escalation"
        },
        {
          "id": "TEST-1753155462675-rsxkk8zwu",
          "name": "LEGACY-007: Test with legacy tenant field",
          "passed": false,
          "duration": 6,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.682Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field",
            "message": "Multi-tenancy uses propertyAccess"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-007",
          "category": "Legacy Structure",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Medium - Multi-tenant isolation"
        },
        {
          "id": "TEST-1753155462733-md1b3nijn",
          "name": "LEGACY-008: Test with legacy accessLevel number",
          "passed": false,
          "duration": 6,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.739Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field",
            "message": "Use role-based access control"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-008",
          "category": "Legacy Structure",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Medium - Access control clarity"
        },
        {
          "id": "TEST-1753155462790-la59ux6yg",
          "name": "LEGACY-009: Test client selection with legacy structure",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.796Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field names detected"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-009",
          "category": "Legacy Structure",
          "endpoint": "POST POST /api/user/select-client",
          "securityImpact": "Low - API consistency"
        },
        {
          "id": "TEST-1753155462848-eo8o7wtlu",
          "name": "LEGACY-010: Test with legacy department assignment",
          "passed": false,
          "duration": 6,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.854Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field",
            "message": "Department assignments use propertyAccess"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-010",
          "category": "Legacy Structure",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Low - Organizational clarity"
        },
        {
          "id": "TEST-1753155462905-akgp9xbcr",
          "name": "LEGACY-011: Test adding client with legacy all-access flag",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.911Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field",
            "message": "Use specific role assignments"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-011",
          "category": "Legacy Structure",
          "endpoint": "POST POST /api/admin/users/:userId/clients",
          "securityImpact": "High - Granular access control"
        },
        {
          "id": "TEST-1753155462962-102hy9x1m",
          "name": "LEGACY-012: Test with legacy groups array",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:42.968Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field",
            "message": "Group assignments use propertyAccess"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-012",
          "category": "Legacy Structure",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Medium - Access model consistency"
        },
        {
          "id": "TEST-1753155463019-rkli7pjwo",
          "name": "LEGACY-013: Test with legacy active/inactive status",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.024Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field",
            "message": "Use isActive boolean field"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-013",
          "category": "Legacy Structure",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Low - Data consistency"
        },
        {
          "id": "TEST-1753155463076-a373zzqyk",
          "name": "LEGACY-014: Test with legacy lastSeen timestamp",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.081Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field",
            "message": "Use lastLogin field"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-014",
          "category": "Legacy Structure",
          "endpoint": "PUT PUT /api/admin/users/test-user-id",
          "securityImpact": "Low - Field naming consistency"
        },
        {
          "id": "TEST-1753155463133-d538awg96",
          "name": "LEGACY-015: Test with legacy super-user flag",
          "passed": false,
          "duration": 2,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.135Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field",
            "message": "Use globalRole for super admin"
          },
          "message": "Expected 400, got 401",
          "testId": "LEGACY-015",
          "category": "Legacy Structure",
          "endpoint": "POST POST /api/admin/users/:userId/unit-roles",
          "securityImpact": "Critical - Privilege control"
        }
      ]
    },
    "Error Response": {
      "total": 12,
      "passed": 1,
      "failed": 11,
      "tests": [
        {
          "id": "TEST-1753155463187-vnlylhtor",
          "name": "ERROR-001: Verify error doesn't leak system internals",
          "passed": false,
          "duration": 2,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.189Z",
          "actualStatus": 401,
          "expectedStatus": 500,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Internal server error",
            "code": "INTERNAL_ERROR"
          },
          "message": "Expected 500, got 401",
          "testId": "ERROR-001",
          "category": "Error Response",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "High - Prevents information leakage"
        },
        {
          "id": "TEST-1753155463240-k4yexfrxy",
          "name": "ERROR-002: Test duplicate email error message",
          "passed": false,
          "duration": 2,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.243Z",
          "actualStatus": 401,
          "expectedStatus": 409,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "User already exists",
            "code": "USER_EXISTS"
          },
          "message": "Expected 409, got 401",
          "testId": "ERROR-002",
          "category": "Error Response",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Low - User enumeration risk accepted"
        },
        {
          "id": "TEST-1753155463294-wt8wd9h2h",
          "name": "ERROR-003: Test error for non-existent user update",
          "passed": false,
          "duration": 2,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.297Z",
          "actualStatus": 401,
          "expectedStatus": 404,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "User not found",
            "code": "USER_NOT_FOUND"
          },
          "message": "Expected 404, got 401",
          "testId": "ERROR-003",
          "category": "Error Response",
          "endpoint": "PUT PUT /api/admin/users/nonexistent-user",
          "securityImpact": "Low - Proper status codes"
        },
        {
          "id": "TEST-1753155463348-nti7eh85a",
          "name": "ERROR-004: Test error selecting unauthorized client",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.353Z",
          "actualStatus": 401,
          "expectedStatus": 403,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Access denied to this client",
            "code": "CLIENT_ACCESS_DENIED"
          },
          "message": "Expected 403, got 401",
          "testId": "ERROR-004",
          "category": "Error Response",
          "endpoint": "POST POST /api/user/select-client",
          "securityImpact": "High - Access control enforcement"
        },
        {
          "id": "TEST-1753155463404-iep43qne9",
          "name": "ERROR-005: Test error deleting user as non-SuperAdmin",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.408Z",
          "actualStatus": 401,
          "expectedStatus": 403,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Insufficient permissions",
            "code": "PERMISSION_DENIED"
          },
          "message": "Expected 403, got 401",
          "testId": "ERROR-005",
          "category": "Error Response",
          "endpoint": "DELETE DELETE /api/admin/users/test-user",
          "securityImpact": "Critical - Role hierarchy enforcement"
        },
        {
          "id": "TEST-1753155463459-xinfxmu2a",
          "name": "ERROR-006: Test malformed JSON error response",
          "passed": true,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.465Z",
          "actualStatus": 400,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid JSON format",
            "code": "INVALID_JSON"
          },
          "expectedBody": {
            "error": "Invalid JSON format",
            "code": "INVALID_JSON"
          },
          "message": "Malformed requests get clear error",
          "testId": "ERROR-006",
          "category": "Error Response",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Low - Input validation"
        },
        {
          "id": "TEST-1753155463517-dc1zjsg15",
          "name": "ERROR-007: Test rate limit error message",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.520Z",
          "actualStatus": 401,
          "expectedStatus": 429,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Too many requests",
            "code": "RATE_LIMITED",
            "retryAfter": 60
          },
          "message": "Expected 429, got 401",
          "testId": "ERROR-007",
          "category": "Error Response",
          "endpoint": "GET GET /api/admin/users",
          "securityImpact": "Medium - DoS prevention"
        },
        {
          "id": "TEST-1753155463571-0wc07ekfa",
          "name": "ERROR-008: Test concurrent update conflict error",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.574Z",
          "actualStatus": 401,
          "expectedStatus": 409,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Update conflict",
            "code": "UPDATE_CONFLICT"
          },
          "message": "Expected 409, got 401",
          "testId": "ERROR-008",
          "category": "Error Response",
          "endpoint": "PUT PUT /api/admin/users/test-user",
          "securityImpact": "Low - Data integrity"
        },
        {
          "id": "TEST-1753155463625-rl253sv05",
          "name": "ERROR-009: Test missing required field error",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.629Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Missing required field: email",
            "code": "MISSING_FIELD",
            "field": "email"
          },
          "message": "Expected 400, got 401",
          "testId": "ERROR-009",
          "category": "Error Response",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Low - Developer friendly"
        },
        {
          "id": "TEST-1753155463680-ql99r009g",
          "name": "ERROR-010: Test timeout error message",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.685Z",
          "actualStatus": 401,
          "expectedStatus": 504,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Request timeout",
            "code": "TIMEOUT"
          },
          "message": "Expected 504, got 401",
          "testId": "ERROR-010",
          "category": "Error Response",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "Medium - No infrastructure leakage"
        },
        {
          "id": "TEST-1753155463736-up16l2ys6",
          "name": "ERROR-011: Test invalid role error message",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.739Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid role for client access",
            "code": "INVALID_ROLE",
            "validRoles": [
              "viewer",
              "editor",
              "admin"
            ]
          },
          "message": "Expected 400, got 401",
          "testId": "ERROR-011",
          "category": "Error Response",
          "endpoint": "POST POST /api/admin/users/:userId/clients",
          "securityImpact": "Low - Helpful validation"
        },
        {
          "id": "TEST-1753155463790-e71hemjtt",
          "name": "ERROR-012: Test field type mismatch error",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.796Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field type",
            "code": "TYPE_ERROR",
            "field": "isActive",
            "expected": "boolean",
            "received": "string"
          },
          "message": "Expected 400, got 401",
          "testId": "ERROR-012",
          "category": "Error Response",
          "endpoint": "PUT PUT /api/admin/users/test-user",
          "securityImpact": "Low - Input validation"
        }
      ]
    },
    "Edge Cases": {
      "total": 13,
      "passed": 0,
      "failed": 13,
      "tests": [
        {
          "id": "TEST-1753155463847-ger7hd2uy",
          "name": "EDGE-001: Test with extremely large payload (10MB)",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.852Z",
          "actualStatus": 400,
          "expectedStatus": 413,
          "actualBody": {
            "error": "Invalid JSON format",
            "code": "INVALID_JSON"
          },
          "expectedBody": {
            "error": "Payload too large",
            "code": "PAYLOAD_TOO_LARGE",
            "maxSize": "1MB"
          },
          "message": "Expected 413, got 400",
          "testId": "EDGE-001",
          "category": "Edge Cases",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "High - DoS prevention"
        },
        {
          "id": "TEST-1753155463903-lk4me96pg",
          "name": "EDGE-002: Test Unicode in URL parameters",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.906Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid user ID format",
            "code": "INVALID_PARAMETER"
          },
          "message": "Expected 400, got 401",
          "testId": "EDGE-002",
          "category": "Edge Cases",
          "endpoint": "PUT PUT /api/admin/users/test${UNICODE}user",
          "securityImpact": "Medium - Parameter validation"
        },
        {
          "id": "TEST-1753155463957-b3z9zm79w",
          "name": "EDGE-003: Test with null body",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:43.962Z",
          "actualStatus": 400,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid JSON format",
            "code": "INVALID_JSON"
          },
          "expectedBody": {
            "error": "Request body required",
            "code": "EMPTY_BODY"
          },
          "message": "Expected 400, got 400",
          "testId": "EDGE-003",
          "category": "Edge Cases",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Low - Input validation"
        },
        {
          "id": "TEST-1753155464013-p66cgn3qt",
          "name": "EDGE-004: Test with undefined values",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:44.016Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Invalid field values",
            "code": "INVALID_VALUES"
          },
          "message": "Expected 400, got 401",
          "testId": "EDGE-004",
          "category": "Edge Cases",
          "endpoint": "PUT PUT /api/admin/users/test-user",
          "securityImpact": "Low - Data integrity"
        },
        {
          "id": "TEST-1753155464068-6zmqkrdk7",
          "name": "EDGE-005: Test with empty object body",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:44.073Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Missing required field: clientId",
            "code": "MISSING_FIELD"
          },
          "message": "Expected 400, got 401",
          "testId": "EDGE-005",
          "category": "Edge Cases",
          "endpoint": "POST POST /api/user/select-client",
          "securityImpact": "Low - Validation"
        },
        {
          "id": "TEST-1753155464125-ylk6rh1ys",
          "name": "EDGE-006: Test with 1000-character user ID",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:44.130Z",
          "actualStatus": 401,
          "expectedStatus": 414,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "URI too long",
            "code": "URI_TOO_LONG"
          },
          "message": "Expected 414, got 401",
          "testId": "EDGE-006",
          "category": "Edge Cases",
          "endpoint": "DELETE DELETE /api/admin/users/${LONG_ID}",
          "securityImpact": "Medium - Resource exhaustion"
        },
        {
          "id": "TEST-1753155464181-k1s03m2iv",
          "name": "EDGE-007: Test header injection attempt",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": "Invalid character in header content [\"Authorization\"]",
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:44.185Z",
          "testId": "EDGE-007",
          "category": "Edge Cases",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "High - Injection prevention"
        },
        {
          "id": "TEST-1753155464236-0ofleto02",
          "name": "EDGE-008: Test path traversal attempt",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:44.240Z",
          "actualStatus": 404,
          "expectedStatus": 400,
          "actualBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot PUT /etc/passwd</pre>\n</body>\n</html>\n",
          "expectedBody": {
            "error": "Invalid user ID format",
            "code": "INVALID_PARAMETER"
          },
          "message": "Expected 400, got 404",
          "testId": "EDGE-008",
          "category": "Edge Cases",
          "endpoint": "PUT PUT /api/admin/users/../../../etc/passwd",
          "securityImpact": "Critical - File system protection"
        },
        {
          "id": "TEST-1753155464292-q4yhv5xrj",
          "name": "EDGE-009: Test timing attack on user enumeration",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:44.298Z",
          "actualStatus": 401,
          "expectedStatus": "409 or 201",
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "message": "Expected 409 or 201, got 401",
          "testId": "EDGE-009",
          "category": "Edge Cases",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Medium - Timing attack prevention"
        },
        {
          "id": "TEST-1753155464348-4x7i5jpsq",
          "name": "EDGE-010: Test with circular reference in JSON",
          "passed": false,
          "duration": 5,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:44.353Z",
          "actualStatus": 400,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid JSON format",
            "code": "INVALID_JSON"
          },
          "expectedBody": {
            "error": "Invalid JSON structure",
            "code": "CIRCULAR_REFERENCE"
          },
          "message": "Expected 400, got 400",
          "testId": "EDGE-010",
          "category": "Edge Cases",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "Medium - DoS prevention"
        },
        {
          "id": "TEST-1753155464404-wqr83zb9g",
          "name": "EDGE-011: Test with multiple authorization headers",
          "passed": false,
          "duration": 4,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:44.409Z",
          "actualStatus": 401,
          "expectedStatus": 400,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Multiple authorization headers",
            "code": "DUPLICATE_HEADER"
          },
          "message": "Expected 400, got 401",
          "testId": "EDGE-011",
          "category": "Edge Cases",
          "endpoint": "GET GET /api/user/profile",
          "securityImpact": "Medium - Auth confusion prevention"
        },
        {
          "id": "TEST-1753155464461-nxmoqukrl",
          "name": "EDGE-012: Test with mixed content types",
          "passed": false,
          "duration": 9,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:44.471Z",
          "actualStatus": 401,
          "expectedStatus": 415,
          "actualBody": {
            "error": "Invalid token format - not a valid Firebase token"
          },
          "expectedBody": {
            "error": "Unsupported media type",
            "code": "INVALID_CONTENT_TYPE",
            "expected": "application/json"
          },
          "message": "Expected 415, got 401",
          "testId": "EDGE-012",
          "category": "Edge Cases",
          "endpoint": "PUT PUT /api/admin/users/test-user",
          "securityImpact": "Low - Content validation"
        },
        {
          "id": "TEST-1753155464522-azf90fnv4",
          "name": "EDGE-013: Test CORS preflight security",
          "passed": false,
          "duration": 3,
          "data": null,
          "error": null,
          "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "timestamp": "2025-07-22T03:37:44.526Z",
          "actualStatus": 500,
          "expectedStatus": 403,
          "actualBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Error</title>\n</head>\n<body>\n<pre>Error: Not allowed by CORS<br> &nbsp; &nbsp;at origin (file:///Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My%20Drive/Sandyland/SAMS/backend/index.js:41:16)<br> &nbsp; &nbsp;at /Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/cors/lib/index.js:219:13<br> &nbsp; &nbsp;at optionsCallback (/Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/cors/lib/index.js:199:9)<br> &nbsp; &nbsp;at corsMiddleware (/Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/cors/lib/index.js:204:7)<br> &nbsp; &nbsp;at Layer.handle [as handle_request] (/Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/express/lib/router/layer.js:95:5)<br> &nbsp; &nbsp;at trim_prefix (/Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/express/lib/router/index.js:328:13)<br> &nbsp; &nbsp;at /Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/express/lib/router/index.js:286:9<br> &nbsp; &nbsp;at Function.process_params (/Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/express/lib/router/index.js:346:12)<br> &nbsp; &nbsp;at next (/Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/express/lib/router/index.js:280:10)<br> &nbsp; &nbsp;at expressInit (/Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/express/lib/middleware/init.js:40:5)</pre>\n</body>\n</html>\n",
          "message": "Expected 403, got 500",
          "testId": "EDGE-013",
          "category": "Edge Cases",
          "endpoint": "POST POST /api/admin/users",
          "securityImpact": "High - Cross-origin protection"
        }
      ]
    }
  },
  "allResults": [
    {
      "id": "TEST-1753155457275-kw31hv4ww",
      "name": "AUTH-001: Test accessing user profile without any authorization header",
      "passed": true,
      "duration": 1,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:37.712Z",
      "actualStatus": 401,
      "expectedStatus": 401,
      "actualBody": {
        "error": "No valid authorization header"
      },
      "expectedBody": {
        "error": "No valid authorization header"
      },
      "message": "User cannot access their profile without logging in",
      "testId": "AUTH-001",
      "category": "Authentication",
      "endpoint": "GET GET /api/user/profile",
      "securityImpact": "Critical - Prevents unauthorized data access"
    },
    {
      "id": "TEST-1753155457763-qhw2uvz8i",
      "name": "AUTH-002: Test accessing user profile with invalid token format",
      "passed": true,
      "duration": 4,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:37.767Z",
      "actualStatus": 401,
      "expectedStatus": 401,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "message": "System rejects tokens that aren't properly formatted Firebase tokens",
      "testId": "AUTH-002",
      "category": "Authentication",
      "endpoint": "GET GET /api/user/profile",
      "securityImpact": "Critical - Prevents token forgery"
    },
    {
      "id": "TEST-1753155457818-480ynxg6v",
      "name": "AUTH-003: Test accessing user profile with expired Firebase token",
      "passed": true,
      "duration": 3,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:37.822Z",
      "actualStatus": 401,
      "expectedStatus": 401,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "message": "Old login tokens cannot be reused after expiration",
      "testId": "AUTH-003",
      "category": "Authentication",
      "endpoint": "GET GET /api/user/profile",
      "securityImpact": "High - Prevents session hijacking with old tokens"
    },
    {
      "id": "TEST-1753155457873-elm0gejpy",
      "name": "AUTH-004: Test with token from different Firebase project",
      "passed": true,
      "duration": 3,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:37.877Z",
      "actualStatus": 401,
      "expectedStatus": 401,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "message": "Tokens from other Firebase projects are rejected",
      "testId": "AUTH-004",
      "category": "Authentication",
      "endpoint": "GET GET /api/user/profile",
      "securityImpact": "Critical - Prevents cross-project token abuse"
    },
    {
      "id": "TEST-1753155457928-z7l9kqtuv",
      "name": "AUTH-005: Test with malformed Bearer header format",
      "passed": true,
      "duration": 2,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:37.931Z",
      "actualStatus": 401,
      "expectedStatus": 401,
      "actualBody": {
        "error": "Invalid authorization format - use 'Bearer YOUR_TOKEN'"
      },
      "expectedBody": {
        "error": "Invalid authorization format - use 'Bearer YOUR_TOKEN'"
      },
      "message": "Authorization header must follow Bearer token format",
      "testId": "AUTH-005",
      "category": "Authentication",
      "endpoint": "GET GET /api/user/profile",
      "securityImpact": "Medium - Enforces proper authentication standards"
    },
    {
      "id": "TEST-1753155457982-asff51ilx",
      "name": "AUTH-006: Test with token in wrong header field",
      "passed": false,
      "duration": 1179,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:39.161Z",
      "actualStatus": 200,
      "expectedStatus": 401,
      "actualBody": {
        "user": {
          "id": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
          "email": "michael@landesman.com",
          "name": "Michael Landesman",
          "isActive": true,
          "globalRole": "superAdmin",
          "propertyAccess": {
            "MTC": {
              "isAdmin": true,
              "unitAssignments": [
                {
                  "role": "owner",
                  "unitId": "PH4D"
                }
              ]
            },
            "test-client": {
              "role": "user",
              "unitAssignments": [
                {
                  "unitId": "test-unit",
                  "role": "unitManager",
                  "addedDate": "2025-07-21T16:14:56.542Z",
                  "addedBy": "michael@landesman.com"
                }
              ],
              "addedDate": "2025-07-21T16:14:56.542Z",
              "addedBy": "michael@landesman.com"
            }
          },
          "preferredClient": "test-client"
        }
      },
      "expectedBody": {
        "error": "No valid authorization header"
      },
      "message": "Expected 401, got 200",
      "testId": "AUTH-006",
      "category": "Authentication",
      "endpoint": "GET GET /api/user/profile",
      "securityImpact": "Medium - Prevents header confusion attacks"
    },
    {
      "id": "TEST-1753155459212-yj6j8v6t1",
      "name": "AUTH-007: Test accessing user clients without authorization",
      "passed": true,
      "duration": 2,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:39.214Z",
      "actualStatus": 401,
      "expectedStatus": 401,
      "actualBody": {
        "error": "No valid authorization header"
      },
      "expectedBody": {
        "error": "No valid authorization header"
      },
      "message": "Client list requires authentication",
      "testId": "AUTH-007",
      "category": "Authentication",
      "endpoint": "GET GET /api/user/clients",
      "securityImpact": "Critical - Protects client data"
    },
    {
      "id": "TEST-1753155459265-yjg5n72pe",
      "name": "AUTH-008: Test selecting client without authorization",
      "passed": true,
      "duration": 2,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:39.267Z",
      "actualStatus": 401,
      "expectedStatus": 401,
      "actualBody": {
        "error": "No valid authorization header"
      },
      "expectedBody": {
        "error": "No valid authorization header"
      },
      "message": "Cannot switch clients without being logged in",
      "testId": "AUTH-008",
      "category": "Authentication",
      "endpoint": "POST POST /api/user/select-client",
      "securityImpact": "Critical - Prevents unauthorized client access"
    },
    {
      "id": "TEST-1753155459318-2x6md72nh",
      "name": "AUTH-009: Test accessing admin users list without authorization",
      "passed": true,
      "duration": 1,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:39.319Z",
      "actualStatus": 401,
      "expectedStatus": 401,
      "actualBody": {
        "error": "No valid authorization header"
      },
      "expectedBody": {
        "error": "No valid authorization header"
      },
      "message": "Admin endpoints require authentication",
      "testId": "AUTH-009",
      "category": "Authentication",
      "endpoint": "GET GET /api/admin/users",
      "securityImpact": "Critical - Protects user data"
    },
    {
      "id": "TEST-1753155459370-q91sh7ctr",
      "name": "AUTH-010: Test updating user without authorization",
      "passed": true,
      "duration": 1,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:39.372Z",
      "actualStatus": 401,
      "expectedStatus": 401,
      "actualBody": {
        "error": "No valid authorization header"
      },
      "expectedBody": {
        "error": "No valid authorization header"
      },
      "message": "Cannot modify users without authentication",
      "testId": "AUTH-010",
      "category": "Authentication",
      "endpoint": "PUT PUT /api/admin/users/test-user-id",
      "securityImpact": "Critical - Prevents unauthorized user modifications"
    },
    {
      "id": "TEST-1753155459423-gl0r95axq",
      "name": "AUTH-011: Test accessing unit management endpoint without auth",
      "passed": false,
      "duration": 994,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:40.417Z",
      "actualStatus": 200,
      "expectedStatus": 401,
      "actualBody": {
        "success": true,
        "message": "Unit Management enablement completed",
        "details": {
          "processed": 2,
          "updated": 0,
          "created": 0,
          "alreadyEnabled": 2,
          "errors": []
        }
      },
      "expectedBody": {
        "error": "No valid authorization header"
      },
      "message": "Expected 401, got 200",
      "testId": "AUTH-011",
      "category": "Authentication",
      "endpoint": "GET GET /api/admin/enable-unit-management",
      "securityImpact": "Critical - Protects system configuration"
    },
    {
      "id": "TEST-1753155460468-rc1t0vjme",
      "name": "AUTH-012: Test with valid token but insufficient permissions",
      "passed": false,
      "duration": 6,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:40.475Z",
      "actualStatus": 401,
      "expectedStatus": 403,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Insufficient permissions"
      },
      "message": "Expected 403, got 401",
      "testId": "AUTH-012",
      "category": "Authentication",
      "endpoint": "GET GET /api/admin/users",
      "securityImpact": "Critical - Enforces role-based access"
    },
    {
      "id": "TEST-1753155460527-87eubn1iy",
      "name": "AUTH-013: Test creating user with empty authorization header",
      "passed": true,
      "duration": 5,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:40.532Z",
      "actualStatus": 401,
      "expectedStatus": 401,
      "actualBody": {
        "error": "No valid authorization header"
      },
      "expectedBody": {
        "error": "No valid authorization header"
      },
      "message": "Empty authorization header is rejected",
      "testId": "AUTH-013",
      "category": "Authentication",
      "endpoint": "POST POST /api/admin/users",
      "securityImpact": "Medium - Prevents empty token bypass"
    },
    {
      "id": "TEST-1753155460583-s640e5omc",
      "name": "AUTH-014: Test deleting user without authorization",
      "passed": true,
      "duration": 4,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:40.588Z",
      "actualStatus": 401,
      "expectedStatus": 401,
      "actualBody": {
        "error": "No valid authorization header"
      },
      "expectedBody": {
        "error": "No valid authorization header"
      },
      "message": "User deletion requires authentication",
      "testId": "AUTH-014",
      "category": "Authentication",
      "endpoint": "DELETE DELETE /api/admin/users/test-user-id",
      "securityImpact": "Critical - Prevents unauthorized deletions"
    },
    {
      "id": "TEST-1753155460639-kbquov6dy",
      "name": "AUTH-015: Test with SQL injection in authorization header",
      "passed": true,
      "duration": 3,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:40.642Z",
      "actualStatus": 401,
      "expectedStatus": 401,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "message": "SQL injection attempts in auth headers are blocked",
      "testId": "AUTH-015",
      "category": "Authentication",
      "endpoint": "GET GET /api/user/profile",
      "securityImpact": "High - Prevents injection attacks"
    },
    {
      "id": "TEST-1753155460694-z2h2x5sta",
      "name": "AUTH-016: Test with extremely long token (buffer overflow attempt)",
      "passed": true,
      "duration": 3,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:40.697Z",
      "actualStatus": 401,
      "expectedStatus": 401,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "message": "Oversized tokens are rejected to prevent overflow attacks",
      "testId": "AUTH-016",
      "category": "Authentication",
      "endpoint": "GET GET /api/user/profile",
      "securityImpact": "Medium - Prevents buffer overflow"
    },
    {
      "id": "TEST-1753155460749-1crnrem9w",
      "name": "AUTH-017: Test unit role assignment without authorization",
      "passed": true,
      "duration": 4,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:40.753Z",
      "actualStatus": 401,
      "expectedStatus": 401,
      "actualBody": {
        "error": "No valid authorization header"
      },
      "expectedBody": {
        "error": "No valid authorization header"
      },
      "message": "Role assignments require authentication",
      "testId": "AUTH-017",
      "category": "Authentication",
      "endpoint": "POST POST /api/admin/users/:userId/unit-roles",
      "securityImpact": "Critical - Prevents privilege escalation"
    },
    {
      "id": "TEST-1753155460805-r382cm77f",
      "name": "AUTH-018: Test accessing statistics without authorization",
      "passed": true,
      "duration": 3,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:40.808Z",
      "actualStatus": 401,
      "expectedStatus": 401,
      "actualBody": {
        "error": "No valid authorization header"
      },
      "expectedBody": {
        "error": "No valid authorization header"
      },
      "message": "System statistics require authentication",
      "testId": "AUTH-018",
      "category": "Authentication",
      "endpoint": "GET GET /api/admin/stats",
      "securityImpact": "High - Protects system information"
    },
    {
      "id": "TEST-1753155460859-cmj7480un",
      "name": "AUTH-019: Test accessing audit logs without authorization",
      "passed": true,
      "duration": 2,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:40.862Z",
      "actualStatus": 401,
      "expectedStatus": 401,
      "actualBody": {
        "error": "No valid authorization header"
      },
      "expectedBody": {
        "error": "No valid authorization header"
      },
      "message": "Security audit logs require authentication",
      "testId": "AUTH-019",
      "category": "Authentication",
      "endpoint": "GET GET /api/admin/audit-logs",
      "securityImpact": "Critical - Protects security logs"
    },
    {
      "id": "TEST-1753155460914-v8e2lygnx",
      "name": "AUTH-020: Test with Bearer keyword but no token",
      "passed": false,
      "duration": 3,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:40.918Z",
      "actualStatus": 401,
      "expectedStatus": 401,
      "actualBody": {
        "error": "Invalid authorization format - use 'Bearer YOUR_TOKEN'"
      },
      "expectedBody": {
        "error": "No token provided"
      },
      "message": "Expected 401, got 401",
      "testId": "AUTH-020",
      "category": "Authentication",
      "endpoint": "GET GET /api/user/profile",
      "securityImpact": "Low - Enforces complete auth format"
    },
    {
      "id": "TEST-1753155460969-t166exa50",
      "name": "FIELD-001: Test creating user with forbidden 'vendor' field",
      "passed": false,
      "duration": 4,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:40.974Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field names detected",
        "code": "FORBIDDEN_FIELDS",
        "details": [
          {
            "field": "vendor",
            "message": "Invalid field 'vendor'. Use 'vendorId' instead"
          }
        ]
      },
      "message": "Expected 400, got 401",
      "testId": "FIELD-001",
      "category": "Field Validation",
      "endpoint": "POST POST /api/admin/users",
      "securityImpact": "High - Prevents field name confusion attacks"
    },
    {
      "id": "TEST-1753155461026-u90al8mdn",
      "name": "FIELD-002: Test creating user with forbidden 'category' field",
      "passed": false,
      "duration": 5,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:41.031Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field names detected",
        "code": "FORBIDDEN_FIELDS",
        "details": [
          {
            "field": "category",
            "message": "Invalid field 'category'. Use 'categoryId' instead"
          }
        ]
      },
      "message": "Expected 400, got 401",
      "testId": "FIELD-002",
      "category": "Field Validation",
      "endpoint": "POST POST /api/admin/users",
      "securityImpact": "High - Maintains data integrity"
    },
    {
      "id": "TEST-1753155461081-cc5govbh1",
      "name": "FIELD-003: Test updating user with forbidden 'account' field",
      "passed": false,
      "duration": 3,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:41.085Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field names detected",
        "code": "FORBIDDEN_FIELDS",
        "details": [
          {
            "field": "account",
            "message": "Invalid field 'account'. Use 'accountId' instead"
          }
        ]
      },
      "message": "Expected 400, got 401",
      "testId": "FIELD-003",
      "category": "Field Validation",
      "endpoint": "PUT PUT /api/admin/users/test-user-id",
      "securityImpact": "High - Prevents legacy field usage"
    },
    {
      "id": "TEST-1753155461136-wwmfh9dn2",
      "name": "FIELD-004: Test updating user with multiple forbidden fields",
      "passed": false,
      "duration": 2,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:41.138Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field names detected",
        "code": "FORBIDDEN_FIELDS",
        "details": [
          {
            "field": "vendor",
            "message": "Invalid field 'vendor'. Use 'vendorId' instead"
          },
          {
            "field": "category",
            "message": "Invalid field 'category'. Use 'categoryId' instead"
          },
          {
            "field": "unit",
            "message": "Invalid field 'unit'. Use 'unitId' instead"
          }
        ]
      },
      "message": "Expected 400, got 401",
      "testId": "FIELD-004",
      "category": "Field Validation",
      "endpoint": "PUT PUT /api/admin/users/test-user-id",
      "securityImpact": "High - Comprehensive field validation"
    },
    {
      "id": "TEST-1753155461189-tb53ezmzp",
      "name": "FIELD-005: Test with nested forbidden fields in propertyAccess",
      "passed": false,
      "duration": 3,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:41.192Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field names detected",
        "code": "FORBIDDEN_FIELDS",
        "details": [
          {
            "field": "propertyAccess.client123.vendor",
            "message": "Invalid field 'vendor'. Use 'vendorId' instead"
          }
        ]
      },
      "message": "Expected 400, got 401",
      "testId": "FIELD-005",
      "category": "Field Validation",
      "endpoint": "POST POST /api/admin/users",
      "securityImpact": "High - Deep object validation"
    },
    {
      "id": "TEST-1753155461243-k84cnnx3p",
      "name": "FIELD-006: Test client selection with forbidden 'client' field",
      "passed": false,
      "duration": 3,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:41.246Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field names detected",
        "code": "FORBIDDEN_FIELDS",
        "details": [
          {
            "field": "client",
            "message": "Invalid field 'client'. Use 'clientId' instead"
          }
        ]
      },
      "message": "Expected 400, got 401",
      "testId": "FIELD-006",
      "category": "Field Validation",
      "endpoint": "POST POST /api/user/select-client",
      "securityImpact": "Medium - API consistency"
    },
    {
      "id": "TEST-1753155461297-de1bluxfe",
      "name": "FIELD-007: Test with forbidden 'manager' field (user-specific)",
      "passed": false,
      "duration": 1,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:41.298Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid user field names detected",
        "code": "FORBIDDEN_USER_FIELDS",
        "details": [
          {
            "field": "manager",
            "message": "Invalid field 'manager'. Use 'managerId' instead"
          }
        ]
      },
      "message": "Expected 400, got 401",
      "testId": "FIELD-007",
      "category": "Field Validation",
      "endpoint": "PUT PUT /api/admin/users/test-user-id",
      "securityImpact": "High - Prevents legacy structure usage"
    },
    {
      "id": "TEST-1753155461349-te9x42cwu",
      "name": "FIELD-008: Test with forbidden fields in array elements",
      "passed": false,
      "duration": 2,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:41.351Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field names detected",
        "code": "FORBIDDEN_FIELDS",
        "details": [
          {
            "field": "permissions.0.unit",
            "message": "Invalid field 'unit'. Use 'unitId' instead"
          }
        ]
      },
      "message": "Expected 400, got 401",
      "testId": "FIELD-008",
      "category": "Field Validation",
      "endpoint": "POST POST /api/admin/users",
      "securityImpact": "Medium - Array validation"
    },
    {
      "id": "TEST-1753155461402-ulvw4jq4z",
      "name": "FIELD-009: Test SQL injection attempt in field names",
      "passed": false,
      "duration": 3,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:41.406Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid request format"
      },
      "message": "Expected 400, got 401",
      "testId": "FIELD-009",
      "category": "Field Validation",
      "endpoint": "PUT PUT /api/admin/users/test-user-id",
      "securityImpact": "Critical - Prevents injection attacks"
    },
    {
      "id": "TEST-1753155461457-qsfr36561",
      "name": "FIELD-010: Test adding client access with forbidden 'client' field",
      "passed": false,
      "duration": 2,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:41.459Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field names detected",
        "code": "FORBIDDEN_FIELDS",
        "details": [
          {
            "field": "client",
            "message": "Invalid field 'client'. Use 'clientId' instead"
          }
        ]
      },
      "message": "Expected 400, got 401",
      "testId": "FIELD-010",
      "category": "Field Validation",
      "endpoint": "POST POST /api/admin/users/:userId/clients",
      "securityImpact": "Medium - API consistency"
    },
    {
      "id": "TEST-1753155461511-4bey2ifp7",
      "name": "FIELD-011: Test with extremely long field names",
      "passed": false,
      "duration": 3,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:41.514Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field name length"
      },
      "message": "Expected 400, got 401",
      "testId": "FIELD-011",
      "category": "Field Validation",
      "endpoint": "PUT PUT /api/admin/users/test-user-id",
      "securityImpact": "Low - Prevents resource exhaustion"
    },
    {
      "id": "TEST-1753155461565-k0ztj9hb7",
      "name": "FIELD-012: Test with Unicode characters in forbidden fields",
      "passed": false,
      "duration": 2,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:41.568Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field name format"
      },
      "message": "Expected 400, got 401",
      "testId": "FIELD-012",
      "category": "Field Validation",
      "endpoint": "POST POST /api/admin/users",
      "securityImpact": "Medium - Unicode bypass prevention"
    },
    {
      "id": "TEST-1753155461619-1ezo202bp",
      "name": "FIELD-013: Test case variations of forbidden fields",
      "passed": false,
      "duration": 5,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:41.624Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field names detected"
      },
      "message": "Expected 400, got 401",
      "testId": "FIELD-013",
      "category": "Field Validation",
      "endpoint": "PUT PUT /api/admin/users/test-user-id",
      "securityImpact": "Low - Case sensitivity check"
    },
    {
      "id": "TEST-1753155461675-8g6edao0m",
      "name": "FIELD-014: Test unit role with forbidden 'unit' field",
      "passed": false,
      "duration": 3,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:41.679Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field names detected",
        "code": "FORBIDDEN_FIELDS",
        "details": [
          {
            "field": "unit",
            "message": "Invalid field 'unit'. Use 'unitId' instead"
          }
        ]
      },
      "message": "Expected 400, got 401",
      "testId": "FIELD-014",
      "category": "Field Validation",
      "endpoint": "POST POST /api/admin/users/:userId/unit-roles",
      "securityImpact": "High - Prevents role confusion"
    },
    {
      "id": "TEST-1753155461730-acvvygvuo",
      "name": "FIELD-015: Test deeply nested forbidden fields",
      "passed": false,
      "duration": 3,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:41.733Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field names detected",
        "code": "FORBIDDEN_FIELDS",
        "details": [
          {
            "field": "data.level1.level2.level3.vendor",
            "message": "Invalid field 'vendor'. Use 'vendorId' instead"
          }
        ]
      },
      "message": "Expected 400, got 401",
      "testId": "FIELD-015",
      "category": "Field Validation",
      "endpoint": "PUT PUT /api/admin/users/test-user-id",
      "securityImpact": "High - Deep validation"
    },
    {
      "id": "TEST-1753155461783-ptykwg70e",
      "name": "FIELD-016: Test with null values in forbidden fields",
      "passed": false,
      "duration": 4,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:41.788Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field names detected",
        "code": "FORBIDDEN_FIELDS"
      },
      "message": "Expected 400, got 401",
      "testId": "FIELD-016",
      "category": "Field Validation",
      "endpoint": "POST POST /api/admin/users",
      "securityImpact": "Medium - Null bypass prevention"
    },
    {
      "id": "TEST-1753155461839-e0rlr6niu",
      "name": "FIELD-017: Test with empty string in forbidden fields",
      "passed": false,
      "duration": 3,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:41.843Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field names detected",
        "code": "FORBIDDEN_FIELDS"
      },
      "message": "Expected 400, got 401",
      "testId": "FIELD-017",
      "category": "Field Validation",
      "endpoint": "PUT PUT /api/admin/users/test-user-id",
      "securityImpact": "Medium - Empty value bypass prevention"
    },
    {
      "id": "TEST-1753155461894-80aq758e0",
      "name": "FIELD-018: Test with boolean values in forbidden fields",
      "passed": false,
      "duration": 4,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:41.899Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field names detected",
        "code": "FORBIDDEN_FIELDS"
      },
      "message": "Expected 400, got 401",
      "testId": "FIELD-018",
      "category": "Field Validation",
      "endpoint": "POST POST /api/admin/users",
      "securityImpact": "Low - Type checking"
    },
    {
      "id": "TEST-1753155461950-z5v92xgve",
      "name": "FIELD-019: Test with numeric values in forbidden fields",
      "passed": false,
      "duration": 5,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:41.955Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field names detected",
        "code": "FORBIDDEN_FIELDS"
      },
      "message": "Expected 400, got 401",
      "testId": "FIELD-019",
      "category": "Field Validation",
      "endpoint": "PUT PUT /api/admin/users/test-user-id",
      "securityImpact": "Low - Type validation"
    },
    {
      "id": "TEST-1753155462005-gr4ejjvod",
      "name": "FIELD-020: Test field validation with array of forbidden values",
      "passed": false,
      "duration": 4,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:42.010Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field names detected",
        "code": "FORBIDDEN_FIELDS"
      },
      "message": "Expected 400, got 401",
      "testId": "FIELD-020",
      "category": "Field Validation",
      "endpoint": "POST POST /api/admin/users",
      "securityImpact": "Low - Array type validation"
    },
    {
      "id": "TEST-1753155462061-vs7pm7ye4",
      "name": "FIELD-021: Test with object values in forbidden fields",
      "passed": false,
      "duration": 5,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:42.067Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field names detected",
        "code": "FORBIDDEN_FIELDS"
      },
      "message": "Expected 400, got 401",
      "testId": "FIELD-021",
      "category": "Field Validation",
      "endpoint": "PUT PUT /api/admin/users/test-user-id",
      "securityImpact": "Medium - Object validation"
    },
    {
      "id": "TEST-1753155462118-lqytp4bj8",
      "name": "FIELD-022: Test prototype pollution attempt",
      "passed": false,
      "duration": 4,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:42.123Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field name"
      },
      "message": "Expected 400, got 401",
      "testId": "FIELD-022",
      "category": "Field Validation",
      "endpoint": "POST POST /api/admin/users",
      "securityImpact": "Critical - Prevents prototype pollution"
    },
    {
      "id": "TEST-1753155462174-yw5zvhpco",
      "name": "FIELD-023: Test with constructor override attempt",
      "passed": false,
      "duration": 3,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:42.177Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field name"
      },
      "message": "Expected 400, got 401",
      "testId": "FIELD-023",
      "category": "Field Validation",
      "endpoint": "PUT PUT /api/admin/users/test-user-id",
      "securityImpact": "High - Prevents object manipulation"
    },
    {
      "id": "TEST-1753155462229-tif33w8zh",
      "name": "FIELD-024: Test mixed valid and invalid fields",
      "passed": false,
      "duration": 4,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:42.234Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field names detected",
        "code": "FORBIDDEN_FIELDS",
        "details": [
          {
            "field": "vendor",
            "message": "Invalid field 'vendor'. Use 'vendorId' instead"
          }
        ]
      },
      "message": "Expected 400, got 401",
      "testId": "FIELD-024",
      "category": "Field Validation",
      "endpoint": "POST POST /api/admin/users/:userId/clients",
      "securityImpact": "High - Partial validation prevention"
    },
    {
      "id": "TEST-1753155462284-c5ppx3drd",
      "name": "FIELD-025: Test field validation bypass with JSON strings",
      "passed": false,
      "duration": 5,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:42.289Z",
      "actualStatus": 401,
      "expectedStatus": 200,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "success": true
      },
      "message": "Expected 200, got 401",
      "testId": "FIELD-025",
      "category": "Field Validation",
      "endpoint": "PUT PUT /api/admin/users/test-user-id",
      "securityImpact": "Low - Expected behavior"
    },
    {
      "id": "TEST-1753155462340-xbmstlbmk",
      "name": "LEGACY-001: Test creating user with old role assignment format",
      "passed": false,
      "duration": 4,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:42.344Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid user structure",
        "message": "Use propertyAccess for role assignments"
      },
      "message": "Expected 400, got 401",
      "testId": "LEGACY-001",
      "category": "Legacy Structure",
      "endpoint": "POST POST /api/admin/users",
      "securityImpact": "High - Prevents legacy role confusion"
    },
    {
      "id": "TEST-1753155462396-67r3zf7c5",
      "name": "LEGACY-002: Test updating with legacy clientAccess structure",
      "passed": false,
      "duration": 5,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:42.401Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field structure",
        "message": "Use propertyAccess instead of clientAccess"
      },
      "message": "Expected 400, got 401",
      "testId": "LEGACY-002",
      "category": "Legacy Structure",
      "endpoint": "PUT PUT /api/admin/users/test-user-id",
      "securityImpact": "High - Enforces new access model"
    },
    {
      "id": "TEST-1753155462452-qez0k5naa",
      "name": "LEGACY-003: Test with old manager assignment format",
      "passed": false,
      "duration": 4,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:42.457Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid user field names detected",
        "code": "FORBIDDEN_USER_FIELDS"
      },
      "message": "Expected 400, got 401",
      "testId": "LEGACY-003",
      "category": "Legacy Structure",
      "endpoint": "POST POST /api/admin/users",
      "securityImpact": "Medium - Data consistency"
    },
    {
      "id": "TEST-1753155462509-0kz7zaap5",
      "name": "LEGACY-004: Test with legacy permissions array",
      "passed": false,
      "duration": 5,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:42.514Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid permission structure",
        "message": "Use role-based permissions"
      },
      "message": "Expected 400, got 401",
      "testId": "LEGACY-004",
      "category": "Legacy Structure",
      "endpoint": "PUT PUT /api/admin/users/test-user-id",
      "securityImpact": "High - Enforces RBAC"
    },
    {
      "id": "TEST-1753155462565-1ur647lpx",
      "name": "LEGACY-005: Test with legacy unit assignment structure",
      "passed": false,
      "duration": 3,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:42.568Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field names detected"
      },
      "message": "Expected 400, got 401",
      "testId": "LEGACY-005",
      "category": "Legacy Structure",
      "endpoint": "POST POST /api/admin/users/:userId/unit-roles",
      "securityImpact": "High - Prevents permission bypass"
    },
    {
      "id": "TEST-1753155462619-kkjqlny3h",
      "name": "LEGACY-006: Test with isAdmin boolean (legacy)",
      "passed": false,
      "duration": 4,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:42.624Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field",
        "message": "Use globalRole instead of isAdmin"
      },
      "message": "Expected 400, got 401",
      "testId": "LEGACY-006",
      "category": "Legacy Structure",
      "endpoint": "PUT PUT /api/admin/users/test-user-id",
      "securityImpact": "Critical - Prevents privilege escalation"
    },
    {
      "id": "TEST-1753155462675-rsxkk8zwu",
      "name": "LEGACY-007: Test with legacy tenant field",
      "passed": false,
      "duration": 6,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:42.682Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field",
        "message": "Multi-tenancy uses propertyAccess"
      },
      "message": "Expected 400, got 401",
      "testId": "LEGACY-007",
      "category": "Legacy Structure",
      "endpoint": "POST POST /api/admin/users",
      "securityImpact": "Medium - Multi-tenant isolation"
    },
    {
      "id": "TEST-1753155462733-md1b3nijn",
      "name": "LEGACY-008: Test with legacy accessLevel number",
      "passed": false,
      "duration": 6,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:42.739Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field",
        "message": "Use role-based access control"
      },
      "message": "Expected 400, got 401",
      "testId": "LEGACY-008",
      "category": "Legacy Structure",
      "endpoint": "PUT PUT /api/admin/users/test-user-id",
      "securityImpact": "Medium - Access control clarity"
    },
    {
      "id": "TEST-1753155462790-la59ux6yg",
      "name": "LEGACY-009: Test client selection with legacy structure",
      "passed": false,
      "duration": 5,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:42.796Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field names detected"
      },
      "message": "Expected 400, got 401",
      "testId": "LEGACY-009",
      "category": "Legacy Structure",
      "endpoint": "POST POST /api/user/select-client",
      "securityImpact": "Low - API consistency"
    },
    {
      "id": "TEST-1753155462848-eo8o7wtlu",
      "name": "LEGACY-010: Test with legacy department assignment",
      "passed": false,
      "duration": 6,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:42.854Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field",
        "message": "Department assignments use propertyAccess"
      },
      "message": "Expected 400, got 401",
      "testId": "LEGACY-010",
      "category": "Legacy Structure",
      "endpoint": "PUT PUT /api/admin/users/test-user-id",
      "securityImpact": "Low - Organizational clarity"
    },
    {
      "id": "TEST-1753155462905-akgp9xbcr",
      "name": "LEGACY-011: Test adding client with legacy all-access flag",
      "passed": false,
      "duration": 5,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:42.911Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field",
        "message": "Use specific role assignments"
      },
      "message": "Expected 400, got 401",
      "testId": "LEGACY-011",
      "category": "Legacy Structure",
      "endpoint": "POST POST /api/admin/users/:userId/clients",
      "securityImpact": "High - Granular access control"
    },
    {
      "id": "TEST-1753155462962-102hy9x1m",
      "name": "LEGACY-012: Test with legacy groups array",
      "passed": false,
      "duration": 5,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:42.968Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field",
        "message": "Group assignments use propertyAccess"
      },
      "message": "Expected 400, got 401",
      "testId": "LEGACY-012",
      "category": "Legacy Structure",
      "endpoint": "PUT PUT /api/admin/users/test-user-id",
      "securityImpact": "Medium - Access model consistency"
    },
    {
      "id": "TEST-1753155463019-rkli7pjwo",
      "name": "LEGACY-013: Test with legacy active/inactive status",
      "passed": false,
      "duration": 4,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:43.024Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field",
        "message": "Use isActive boolean field"
      },
      "message": "Expected 400, got 401",
      "testId": "LEGACY-013",
      "category": "Legacy Structure",
      "endpoint": "POST POST /api/admin/users",
      "securityImpact": "Low - Data consistency"
    },
    {
      "id": "TEST-1753155463076-a373zzqyk",
      "name": "LEGACY-014: Test with legacy lastSeen timestamp",
      "passed": false,
      "duration": 5,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:43.081Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field",
        "message": "Use lastLogin field"
      },
      "message": "Expected 400, got 401",
      "testId": "LEGACY-014",
      "category": "Legacy Structure",
      "endpoint": "PUT PUT /api/admin/users/test-user-id",
      "securityImpact": "Low - Field naming consistency"
    },
    {
      "id": "TEST-1753155463133-d538awg96",
      "name": "LEGACY-015: Test with legacy super-user flag",
      "passed": false,
      "duration": 2,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:43.135Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field",
        "message": "Use globalRole for super admin"
      },
      "message": "Expected 400, got 401",
      "testId": "LEGACY-015",
      "category": "Legacy Structure",
      "endpoint": "POST POST /api/admin/users/:userId/unit-roles",
      "securityImpact": "Critical - Privilege control"
    },
    {
      "id": "TEST-1753155463187-vnlylhtor",
      "name": "ERROR-001: Verify error doesn't leak system internals",
      "passed": false,
      "duration": 2,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:43.189Z",
      "actualStatus": 401,
      "expectedStatus": 500,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Internal server error",
        "code": "INTERNAL_ERROR"
      },
      "message": "Expected 500, got 401",
      "testId": "ERROR-001",
      "category": "Error Response",
      "endpoint": "GET GET /api/user/profile",
      "securityImpact": "High - Prevents information leakage"
    },
    {
      "id": "TEST-1753155463240-k4yexfrxy",
      "name": "ERROR-002: Test duplicate email error message",
      "passed": false,
      "duration": 2,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:43.243Z",
      "actualStatus": 401,
      "expectedStatus": 409,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "User already exists",
        "code": "USER_EXISTS"
      },
      "message": "Expected 409, got 401",
      "testId": "ERROR-002",
      "category": "Error Response",
      "endpoint": "POST POST /api/admin/users",
      "securityImpact": "Low - User enumeration risk accepted"
    },
    {
      "id": "TEST-1753155463294-wt8wd9h2h",
      "name": "ERROR-003: Test error for non-existent user update",
      "passed": false,
      "duration": 2,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:43.297Z",
      "actualStatus": 401,
      "expectedStatus": 404,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "User not found",
        "code": "USER_NOT_FOUND"
      },
      "message": "Expected 404, got 401",
      "testId": "ERROR-003",
      "category": "Error Response",
      "endpoint": "PUT PUT /api/admin/users/nonexistent-user",
      "securityImpact": "Low - Proper status codes"
    },
    {
      "id": "TEST-1753155463348-nti7eh85a",
      "name": "ERROR-004: Test error selecting unauthorized client",
      "passed": false,
      "duration": 4,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:43.353Z",
      "actualStatus": 401,
      "expectedStatus": 403,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Access denied to this client",
        "code": "CLIENT_ACCESS_DENIED"
      },
      "message": "Expected 403, got 401",
      "testId": "ERROR-004",
      "category": "Error Response",
      "endpoint": "POST POST /api/user/select-client",
      "securityImpact": "High - Access control enforcement"
    },
    {
      "id": "TEST-1753155463404-iep43qne9",
      "name": "ERROR-005: Test error deleting user as non-SuperAdmin",
      "passed": false,
      "duration": 4,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:43.408Z",
      "actualStatus": 401,
      "expectedStatus": 403,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Insufficient permissions",
        "code": "PERMISSION_DENIED"
      },
      "message": "Expected 403, got 401",
      "testId": "ERROR-005",
      "category": "Error Response",
      "endpoint": "DELETE DELETE /api/admin/users/test-user",
      "securityImpact": "Critical - Role hierarchy enforcement"
    },
    {
      "id": "TEST-1753155463459-xinfxmu2a",
      "name": "ERROR-006: Test malformed JSON error response",
      "passed": true,
      "duration": 5,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:43.465Z",
      "actualStatus": 400,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid JSON format",
        "code": "INVALID_JSON"
      },
      "expectedBody": {
        "error": "Invalid JSON format",
        "code": "INVALID_JSON"
      },
      "message": "Malformed requests get clear error",
      "testId": "ERROR-006",
      "category": "Error Response",
      "endpoint": "POST POST /api/admin/users",
      "securityImpact": "Low - Input validation"
    },
    {
      "id": "TEST-1753155463517-dc1zjsg15",
      "name": "ERROR-007: Test rate limit error message",
      "passed": false,
      "duration": 3,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:43.520Z",
      "actualStatus": 401,
      "expectedStatus": 429,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Too many requests",
        "code": "RATE_LIMITED",
        "retryAfter": 60
      },
      "message": "Expected 429, got 401",
      "testId": "ERROR-007",
      "category": "Error Response",
      "endpoint": "GET GET /api/admin/users",
      "securityImpact": "Medium - DoS prevention"
    },
    {
      "id": "TEST-1753155463571-0wc07ekfa",
      "name": "ERROR-008: Test concurrent update conflict error",
      "passed": false,
      "duration": 3,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:43.574Z",
      "actualStatus": 401,
      "expectedStatus": 409,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Update conflict",
        "code": "UPDATE_CONFLICT"
      },
      "message": "Expected 409, got 401",
      "testId": "ERROR-008",
      "category": "Error Response",
      "endpoint": "PUT PUT /api/admin/users/test-user",
      "securityImpact": "Low - Data integrity"
    },
    {
      "id": "TEST-1753155463625-rl253sv05",
      "name": "ERROR-009: Test missing required field error",
      "passed": false,
      "duration": 3,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:43.629Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Missing required field: email",
        "code": "MISSING_FIELD",
        "field": "email"
      },
      "message": "Expected 400, got 401",
      "testId": "ERROR-009",
      "category": "Error Response",
      "endpoint": "POST POST /api/admin/users",
      "securityImpact": "Low - Developer friendly"
    },
    {
      "id": "TEST-1753155463680-ql99r009g",
      "name": "ERROR-010: Test timeout error message",
      "passed": false,
      "duration": 4,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:43.685Z",
      "actualStatus": 401,
      "expectedStatus": 504,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Request timeout",
        "code": "TIMEOUT"
      },
      "message": "Expected 504, got 401",
      "testId": "ERROR-010",
      "category": "Error Response",
      "endpoint": "GET GET /api/user/profile",
      "securityImpact": "Medium - No infrastructure leakage"
    },
    {
      "id": "TEST-1753155463736-up16l2ys6",
      "name": "ERROR-011: Test invalid role error message",
      "passed": false,
      "duration": 3,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:43.739Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid role for client access",
        "code": "INVALID_ROLE",
        "validRoles": [
          "viewer",
          "editor",
          "admin"
        ]
      },
      "message": "Expected 400, got 401",
      "testId": "ERROR-011",
      "category": "Error Response",
      "endpoint": "POST POST /api/admin/users/:userId/clients",
      "securityImpact": "Low - Helpful validation"
    },
    {
      "id": "TEST-1753155463790-e71hemjtt",
      "name": "ERROR-012: Test field type mismatch error",
      "passed": false,
      "duration": 5,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:43.796Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field type",
        "code": "TYPE_ERROR",
        "field": "isActive",
        "expected": "boolean",
        "received": "string"
      },
      "message": "Expected 400, got 401",
      "testId": "ERROR-012",
      "category": "Error Response",
      "endpoint": "PUT PUT /api/admin/users/test-user",
      "securityImpact": "Low - Input validation"
    },
    {
      "id": "TEST-1753155463847-ger7hd2uy",
      "name": "EDGE-001: Test with extremely large payload (10MB)",
      "passed": false,
      "duration": 4,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:43.852Z",
      "actualStatus": 400,
      "expectedStatus": 413,
      "actualBody": {
        "error": "Invalid JSON format",
        "code": "INVALID_JSON"
      },
      "expectedBody": {
        "error": "Payload too large",
        "code": "PAYLOAD_TOO_LARGE",
        "maxSize": "1MB"
      },
      "message": "Expected 413, got 400",
      "testId": "EDGE-001",
      "category": "Edge Cases",
      "endpoint": "POST POST /api/admin/users",
      "securityImpact": "High - DoS prevention"
    },
    {
      "id": "TEST-1753155463903-lk4me96pg",
      "name": "EDGE-002: Test Unicode in URL parameters",
      "passed": false,
      "duration": 3,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:43.906Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid user ID format",
        "code": "INVALID_PARAMETER"
      },
      "message": "Expected 400, got 401",
      "testId": "EDGE-002",
      "category": "Edge Cases",
      "endpoint": "PUT PUT /api/admin/users/test${UNICODE}user",
      "securityImpact": "Medium - Parameter validation"
    },
    {
      "id": "TEST-1753155463957-b3z9zm79w",
      "name": "EDGE-003: Test with null body",
      "passed": false,
      "duration": 4,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:43.962Z",
      "actualStatus": 400,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid JSON format",
        "code": "INVALID_JSON"
      },
      "expectedBody": {
        "error": "Request body required",
        "code": "EMPTY_BODY"
      },
      "message": "Expected 400, got 400",
      "testId": "EDGE-003",
      "category": "Edge Cases",
      "endpoint": "POST POST /api/admin/users",
      "securityImpact": "Low - Input validation"
    },
    {
      "id": "TEST-1753155464013-p66cgn3qt",
      "name": "EDGE-004: Test with undefined values",
      "passed": false,
      "duration": 3,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:44.016Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Invalid field values",
        "code": "INVALID_VALUES"
      },
      "message": "Expected 400, got 401",
      "testId": "EDGE-004",
      "category": "Edge Cases",
      "endpoint": "PUT PUT /api/admin/users/test-user",
      "securityImpact": "Low - Data integrity"
    },
    {
      "id": "TEST-1753155464068-6zmqkrdk7",
      "name": "EDGE-005: Test with empty object body",
      "passed": false,
      "duration": 5,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:44.073Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Missing required field: clientId",
        "code": "MISSING_FIELD"
      },
      "message": "Expected 400, got 401",
      "testId": "EDGE-005",
      "category": "Edge Cases",
      "endpoint": "POST POST /api/user/select-client",
      "securityImpact": "Low - Validation"
    },
    {
      "id": "TEST-1753155464125-ylk6rh1ys",
      "name": "EDGE-006: Test with 1000-character user ID",
      "passed": false,
      "duration": 5,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:44.130Z",
      "actualStatus": 401,
      "expectedStatus": 414,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "URI too long",
        "code": "URI_TOO_LONG"
      },
      "message": "Expected 414, got 401",
      "testId": "EDGE-006",
      "category": "Edge Cases",
      "endpoint": "DELETE DELETE /api/admin/users/${LONG_ID}",
      "securityImpact": "Medium - Resource exhaustion"
    },
    {
      "id": "TEST-1753155464181-k1s03m2iv",
      "name": "EDGE-007: Test header injection attempt",
      "passed": false,
      "duration": 3,
      "data": null,
      "error": "Invalid character in header content [\"Authorization\"]",
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:44.185Z",
      "testId": "EDGE-007",
      "category": "Edge Cases",
      "endpoint": "GET GET /api/user/profile",
      "securityImpact": "High - Injection prevention"
    },
    {
      "id": "TEST-1753155464236-0ofleto02",
      "name": "EDGE-008: Test path traversal attempt",
      "passed": false,
      "duration": 3,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:44.240Z",
      "actualStatus": 404,
      "expectedStatus": 400,
      "actualBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Error</title>\n</head>\n<body>\n<pre>Cannot PUT /etc/passwd</pre>\n</body>\n</html>\n",
      "expectedBody": {
        "error": "Invalid user ID format",
        "code": "INVALID_PARAMETER"
      },
      "message": "Expected 400, got 404",
      "testId": "EDGE-008",
      "category": "Edge Cases",
      "endpoint": "PUT PUT /api/admin/users/../../../etc/passwd",
      "securityImpact": "Critical - File system protection"
    },
    {
      "id": "TEST-1753155464292-q4yhv5xrj",
      "name": "EDGE-009: Test timing attack on user enumeration",
      "passed": false,
      "duration": 5,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:44.298Z",
      "actualStatus": 401,
      "expectedStatus": "409 or 201",
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "message": "Expected 409 or 201, got 401",
      "testId": "EDGE-009",
      "category": "Edge Cases",
      "endpoint": "POST POST /api/admin/users",
      "securityImpact": "Medium - Timing attack prevention"
    },
    {
      "id": "TEST-1753155464348-4x7i5jpsq",
      "name": "EDGE-010: Test with circular reference in JSON",
      "passed": false,
      "duration": 5,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:44.353Z",
      "actualStatus": 400,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid JSON format",
        "code": "INVALID_JSON"
      },
      "expectedBody": {
        "error": "Invalid JSON structure",
        "code": "CIRCULAR_REFERENCE"
      },
      "message": "Expected 400, got 400",
      "testId": "EDGE-010",
      "category": "Edge Cases",
      "endpoint": "POST POST /api/admin/users",
      "securityImpact": "Medium - DoS prevention"
    },
    {
      "id": "TEST-1753155464404-wqr83zb9g",
      "name": "EDGE-011: Test with multiple authorization headers",
      "passed": false,
      "duration": 4,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:44.409Z",
      "actualStatus": 401,
      "expectedStatus": 400,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Multiple authorization headers",
        "code": "DUPLICATE_HEADER"
      },
      "message": "Expected 400, got 401",
      "testId": "EDGE-011",
      "category": "Edge Cases",
      "endpoint": "GET GET /api/user/profile",
      "securityImpact": "Medium - Auth confusion prevention"
    },
    {
      "id": "TEST-1753155464461-nxmoqukrl",
      "name": "EDGE-012: Test with mixed content types",
      "passed": false,
      "duration": 9,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:44.471Z",
      "actualStatus": 401,
      "expectedStatus": 415,
      "actualBody": {
        "error": "Invalid token format - not a valid Firebase token"
      },
      "expectedBody": {
        "error": "Unsupported media type",
        "code": "INVALID_CONTENT_TYPE",
        "expected": "application/json"
      },
      "message": "Expected 415, got 401",
      "testId": "EDGE-012",
      "category": "Edge Cases",
      "endpoint": "PUT PUT /api/admin/users/test-user",
      "securityImpact": "Low - Content validation"
    },
    {
      "id": "TEST-1753155464522-azf90fnv4",
      "name": "EDGE-013: Test CORS preflight security",
      "passed": false,
      "duration": 3,
      "data": null,
      "error": null,
      "userId": "fjXv8gX1CYWBvOZ1CS27j96oRCT2",
      "timestamp": "2025-07-22T03:37:44.526Z",
      "actualStatus": 500,
      "expectedStatus": 403,
      "actualBody": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"utf-8\">\n<title>Error</title>\n</head>\n<body>\n<pre>Error: Not allowed by CORS<br> &nbsp; &nbsp;at origin (file:///Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My%20Drive/Sandyland/SAMS/backend/index.js:41:16)<br> &nbsp; &nbsp;at /Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/cors/lib/index.js:219:13<br> &nbsp; &nbsp;at optionsCallback (/Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/cors/lib/index.js:199:9)<br> &nbsp; &nbsp;at corsMiddleware (/Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/cors/lib/index.js:204:7)<br> &nbsp; &nbsp;at Layer.handle [as handle_request] (/Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/express/lib/router/layer.js:95:5)<br> &nbsp; &nbsp;at trim_prefix (/Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/express/lib/router/index.js:328:13)<br> &nbsp; &nbsp;at /Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/express/lib/router/index.js:286:9<br> &nbsp; &nbsp;at Function.process_params (/Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/express/lib/router/index.js:346:12)<br> &nbsp; &nbsp;at next (/Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/express/lib/router/index.js:280:10)<br> &nbsp; &nbsp;at expressInit (/Users/michael/Library/CloudStorage/GoogleDrive-michael@landesman.com/My Drive/Sandyland/SAMS/backend/node_modules/express/lib/middleware/init.js:40:5)</pre>\n</body>\n</html>\n",
      "message": "Expected 403, got 500",
      "testId": "EDGE-013",
      "category": "Edge Cases",
      "endpoint": "POST POST /api/admin/users",
      "securityImpact": "High - Cross-origin protection"
    }
  ]
}