# Frontend Regression Test Suite
# Purpose: Prevent frontend implementations from corrupting backend
# Run: After EVERY frontend task completion

FRONTEND-REG-001:
  Category: Frontend Regression
  Test: Backend refuses convenience fields
  Description: Ensure frontend cannot add forbidden fields for convenience
  Endpoints:
    - POST /api/admin/users
    - PUT /api/admin/users/:id
    - PUT /api/user/profile
  Test Cases:
    - Adding 'vendor' alongside 'vendorId'
    - Adding 'category' alongside 'categoryId'
    - Adding 'client' alongside 'clientId'
    - Adding computed fields like 'fullName'
  Expected: ALL must return 400 with field validation error

FRONTEND-REG-002:
  Category: Frontend Regression  
  Test: No default value injection
  Description: Backend must not fill missing fields with defaults
  Endpoints:
    - POST /api/admin/users
    - POST /api/transactions
  Test Cases:
    - Missing required fields
    - Null values in required fields
    - Empty strings in required fields
  Expected: 400 - Missing required field errors

FRONTEND-REG-003:
  Category: Frontend Regression
  Test: Response structure integrity
  Description: API responses must maintain exact structure
  Method: Snapshot comparison
  Endpoints:
    - GET /api/user/profile
    - GET /api/user/clients
    - GET /api/admin/users
  Process:
    1. Capture baseline response structure
    2. Compare after each frontend change
    3. Flag ANY structural differences
  Expected: Exact match to baseline

FRONTEND-REG-004:
  Category: Frontend Regression
  Test: No backend route additions
  Description: Frontend cannot add new convenience routes
  Method: Route inventory comparison
  Process:
    1. Baseline route list from backend
    2. Compare after frontend changes
    3. Flag any new routes
  Expected: No new routes without Manager approval

FRONTEND-REG-005:
  Category: Frontend Regression
  Test: Field type enforcement
  Description: Backend maintains strict type checking
  Test Cases:
    - String in numeric field
    - Number in string field
    - Object in primitive field
    - Array where object expected
  Expected: 400 - Type validation errors

FRONTEND-REG-006:
  Category: Frontend Regression
  Test: No query parameter shortcuts
  Description: Prevent frontend from bypassing validation via query params
  Test Cases:
    - ?skipValidation=true
    - ?allowLegacy=true
    - ?vendor=allowed
    - ?debug=true
  Expected: Parameters ignored, validation enforced

FRONTEND-REG-007:
  Category: Frontend Regression
  Test: Batch operation integrity
  Description: Bulk operations maintain same validation
  Endpoints:
    - POST /api/admin/users/batch
    - PUT /api/transactions/batch
  Test Cases:
    - Mix of valid and invalid data
    - Forbidden fields in batch
    - Partial batch with errors
  Expected: Entire batch rejected if any item invalid

# Continuous Monitoring Configuration
monitoring:
  schedule: 
    - After each frontend PR
    - Hourly during active development
    - Before any deployment
  
  alerts:
    - Backend file modifications by frontend branch
    - New routes added
    - Response structure changes
    - Validation middleware modifications
  
  enforcement:
    - Block deployment on regression failure
    - Require Manager approval for backend changes
    - Auto-rollback on critical regression