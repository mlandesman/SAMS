// Example configuration file for SAMS
// Copy this to src/config/index.js and update as needed

// The configuration automatically adapts to your environment
const getApiUrl = () => {
  // Use environment variable if set (recommended)
  if (process.env.NEXT_PUBLIC_API_BASE_URL) {
    return process.env.NEXT_PUBLIC_API_BASE_URL;
  }
  
  // Auto-detect based on NODE_ENV
  if (process.env.NODE_ENV === 'production') {
    return 'https://sams-api.sandyland.com.mx/api';
  }
  
  // Default to localhost for development
  return 'http://localhost:5001/api';
};

export const config = {
  // API Configuration
  api: {
    baseUrl: getApiUrl(),
    timeout: 30000, // 30 seconds
  },
  
  // Firebase Configuration
  firebase: {
    apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,
    authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,
    projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,
    storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,
    messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,
    appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,
  },
  
  // Feature Flags
  features: {
    debugMode: process.env.NODE_ENV === 'development',
    showDevTools: process.env.NODE_ENV === 'development',
  },
  
  // Application Settings
  app: {
    name: 'SAMS',
    version: process.env.NEXT_PUBLIC_APP_VERSION || '1.0.0',
    environment: process.env.NODE_ENV || 'development',
  }
};

// Validate required configuration
if (typeof window !== 'undefined' && process.env.NODE_ENV === 'production') {
  const required = ['apiKey', 'authDomain', 'projectId'];
  required.forEach(key => {
    if (!config.firebase[key]) {
      console.error(`Missing required Firebase config: ${key}`);
    }
  });
}

// Log configuration in development
if (process.env.NODE_ENV === 'development' && typeof window !== 'undefined') {
  console.log('App Configuration:', {
    apiUrl: config.api.baseUrl,
    environment: config.app.environment,
    firebase: 'âœ“ Configured'
  });
}